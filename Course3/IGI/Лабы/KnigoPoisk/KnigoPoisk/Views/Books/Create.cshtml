@using Entities.Constants
@using KnigoPoisk.Helpers
@model Entities.Book

@{
    ViewBag.Title = "Добавление книги";
}   

<script type="text/javascript">
    function setText() {
        document.getElementById('Genre').value += document.getElementById('selectGenreId').value + ", ";
    }
</script>



<h2>Добавление книги</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NameRus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameRus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameRus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameOriginal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameOriginal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameOriginal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Photo, new { type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div> 
        
        <div class="form-group">
            @Html.LabelFor(model => model.AuthorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
            </div>
        </div> 
        
        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    <select class="form-control" id="selectGenreId">
                        @foreach (string i in Genre.Genres)
                        {
                            <option>@i</option>
                        }
                    </select> 
                <span class="input-group-btn" style="padding: 0px 0px 10px 0px;">
                    <button type="button" class="btn btn-default" onclick="setText()">+</button>
                </span>
                @Html.TextAreaFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
           
       
        <div class="form-group">
            @Html.LabelFor(model => model.Screenings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Screenings, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Screenings, "", new { @class = "text-danger" })
            </div>
        </div>  

        <div class="form-group">
            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Language, Language.Languages, htmlAttributes:new { @class = "form-control" }) 
                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-arrow-left'></span>", "К списку", "Index", "Books", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
