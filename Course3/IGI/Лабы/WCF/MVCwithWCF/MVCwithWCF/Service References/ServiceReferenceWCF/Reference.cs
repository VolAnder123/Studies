//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCwithWCF.ServiceReferenceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScreeningsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOriginal {
            get {
                return this.NameOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOriginalField, value) != true)) {
                    this.NameOriginalField = value;
                    this.RaisePropertyChanged("NameOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRus {
            get {
                return this.NameRusField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRusField, value) != true)) {
                    this.NameRusField = value;
                    this.RaisePropertyChanged("NameRus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Screenings {
            get {
                return this.ScreeningsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreeningsField, value) != true)) {
                    this.ScreeningsField = value;
                    this.RaisePropertyChanged("Screenings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceWCF.IBookService")]
    public interface IBookService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBooks", ReplyAction="http://tempuri.org/IBookService/GetBooksResponse")]
        MVCwithWCF.ServiceReferenceWCF.Book[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBooks", ReplyAction="http://tempuri.org/IBookService/GetBooksResponse")]
        System.Threading.Tasks.Task<MVCwithWCF.ServiceReferenceWCF.Book[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/Save", ReplyAction="http://tempuri.org/IBookService/SaveResponse")]
        void Save(MVCwithWCF.ServiceReferenceWCF.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/Save", ReplyAction="http://tempuri.org/IBookService/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(MVCwithWCF.ServiceReferenceWCF.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/Find", ReplyAction="http://tempuri.org/IBookService/FindResponse")]
        MVCwithWCF.ServiceReferenceWCF.Book Find(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/Find", ReplyAction="http://tempuri.org/IBookService/FindResponse")]
        System.Threading.Tasks.Task<MVCwithWCF.ServiceReferenceWCF.Book> FindAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/Delete", ReplyAction="http://tempuri.org/IBookService/DeleteResponse")]
        void Delete(MVCwithWCF.ServiceReferenceWCF.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/Delete", ReplyAction="http://tempuri.org/IBookService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(MVCwithWCF.ServiceReferenceWCF.Book book);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookServiceChannel : MVCwithWCF.ServiceReferenceWCF.IBookService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceClient : System.ServiceModel.ClientBase<MVCwithWCF.ServiceReferenceWCF.IBookService>, MVCwithWCF.ServiceReferenceWCF.IBookService {
        
        public BookServiceClient() {
        }
        
        public BookServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCwithWCF.ServiceReferenceWCF.Book[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<MVCwithWCF.ServiceReferenceWCF.Book[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public void Save(MVCwithWCF.ServiceReferenceWCF.Book book) {
            base.Channel.Save(book);
        }
        
        public System.Threading.Tasks.Task SaveAsync(MVCwithWCF.ServiceReferenceWCF.Book book) {
            return base.Channel.SaveAsync(book);
        }
        
        public MVCwithWCF.ServiceReferenceWCF.Book Find(System.Nullable<int> id) {
            return base.Channel.Find(id);
        }
        
        public System.Threading.Tasks.Task<MVCwithWCF.ServiceReferenceWCF.Book> FindAsync(System.Nullable<int> id) {
            return base.Channel.FindAsync(id);
        }
        
        public void Delete(MVCwithWCF.ServiceReferenceWCF.Book book) {
            base.Channel.Delete(book);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(MVCwithWCF.ServiceReferenceWCF.Book book) {
            return base.Channel.DeleteAsync(book);
        }
    }
}
