99{{
          wr  Контекстно-зависимая ON-LINE Помощь  
          wr    для ОПС комплекса ЭКО вер. 3.4     

                        wr ОГЛАВЛЕНИЕ 

      1. РАБОТА С РЕДАКТОРОМ

      1.1.  @МОДЕЛИ@1@
      1.2.  @МЕНЮ КОМАНД@3@
      1.3.  @СИМВОЛЬНЫЕ АТРИБУТЫ@21@
      1.4.  @ЗНАЧЕНИЯ СИМВОЛЬНОГО АТРИБУТА@22@
      1.5.  @УТВЕРЖДЕНИЕ@23@
      1.6.  @ЧИСЛОВЫЕ АТРИБУТЫ@26@
      1.7.  @ЗНАЧЕНИЕ ЧИСЛОВОГО АТРИБУТА@27@
      1.8.  @ПРАВИЛА@28@
      1.9.  @ЕСЛИ и ТО правил@31@
      1.10. @СЦЕНАРИЙ@33@
      1.11. @ЕСЛИ и ТО сценария@34@
      1.12. @СООБЩЕНИЕ сценария@35@
      1.13. @БЛОЧНАЯ СБОРКА@32@
      1.14. @КОМАНДЫ РЕДАКТИРОВАНИЯ@204@

      2. РАБОТА С КОНСУЛЬТАТОРОМ

      2.1.  @МЕНЮ КОМАНД@52@
      2.2.  @КОНСУЛЬТАЦИЯ@67@
      2.3.  @ПРОСМОТР СОСТОЯНИЯ МОДЕЛЕЙ@58@
      2.4.  @ОБЪЯСНЕНИЕ@65@
      2.5.  @ТРАССА@66@

}}
100{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr ПРОТОКОЛ ПРОВЕРКИ 

      Окно ПРОТОКОЛ ПРОВЕРКИ обеспечивает отображение результата провер-
ки загруженной модели. В зависимости от  выбранного  аргумента   команды
@ПРОВЕРИТЬ@5@ протокол проверки выводится с сообщениями о предупреждениях
(проверка с полной диагностикой) или без них (проверка с краткой диагно-
стикой).
      Для просмотра протокола следует использовать клавиши управления кур-
сором. Выход из окна и возвращение в @меню команд@3@ Редактора осуществля-
ется по нажатию клавиши Esc.
}}
1{{
                                       @ОГЛАВЛЕНИЕ@99@

                                wr МОДЕЛИ 

      Окно МОДЕЛИ обеспечивает отображение списка моделей текущего
директория и позволяет выполнить следующие действия:
     @перемещение курсора по списку моделей@10@
     @создание новой модели@11@
     @переименование существующей модели@12@
     @уничтожение существующей модели@13@
     @загрузку модели в оперативную память@14@
     @перемещение курсора в окно КОММЕНТАРИЙ@2@
     @инкрементный поиск модели@15@
     @выход из Редактора@8@
       После выполнения загрузки модели в  оперативную  память  управление
передается  меню  команд,  содержащему  команды  для работы с загруженными
моделями, а в окне МОДЕЛИ имя загруженной  модели  остается  подсвеченным.
}}
10{{
                                       @ОГЛАВЛЕНИЕ@99@

                wr Перемещение  курсора  по  списку  моделей 

       Для  перемещения  курсора  по  списку  моделей используются клавиши
СТРЕЛКА ВВЕРХ и СТРЕЛКА  ВНИЗ.  При  этом  в  окне  КОММЕНТАРИЙ  синхронно
отображается текст комментария к соответствующей модели.
}}
11{{
                                       @ОГЛАВЛЕНИЕ@99@

                      wr Создание новой модели 

       Для  того  чтобы создать новую модель, необходимо подвести курсор к
последней строке списка моделей, содержащей текст  ".",  и  нажать  клавиш
Grey  +.  Затем следует ввести имя новой модели и нажать клавиш Enter. Имя
модели не должно содержать более восьми символов. Оно должно удовлетворять
всем требованиям, предъявляемым к именам файлов операционной системой, под
управлением которой работают ОПС.
}}
12{{
                                       @ОГЛАВЛЕНИЕ@99@

                      wr Переименование  модели 

       Действия  при  переименовании  модели  аналогичны   действиям   при
@создании@11@  новой  модели, за исключением того, что курсор устанавлива-
ется на имени соответствующей модели.
}}
13{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Уничтожение модели 

       Для того чтобы уничтожить модель, необходимо установить  курсор  на
имени этой модели и нажать клавиш Del.
}}
14{{
                                       @ОГЛАВЛЕНИЕ@99@

                            wr Загрузка модели 

       Для того чтобы загрузить модель, необходимо подвести курсор к имени
этой модели и нажать клавиш Enter.
}}
2{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr Комментарий к модели 

       Перемещение  курсора  в  окно  КОММЕНТАРИЙ  и  обратно  выполняется
нажатием   клавиша   Tab.   Передача   управления   в   окно   КОММЕНТАРИЙ
осуществляется  с  целью  корректировки или просмотра текста комментария к
текущей модели.
       Комментарий к модели представляет собой  произвольный текст, не со-
держащий символов-кавычек ("), длина которого не должна превышать wr160 сим-
волов.
}}
15{{
                                       @ОГЛАВЛЕНИЕ@99@

                            wr Инкрементный  поиск 

       Инкрементный  поиск  предназначен   для   того,   чтобы   облегчить
пользователю  поиск  нужного  имени модели в случае, когда список содержит
большое число элементов,  и  заключается  в  следующем.  Нажатие  клавиша,
связанного  с  алфавитно-цифровым символом, инициирует перемещение курсора
по  списку  до  имени  модели,  которое  начинается  с  данного   символа.
Последующее  нажатие  такого  клавиша  перемещает  курсор до имени модели,
которое имеет первые два символа, соответствующие нажатым клавишам и  т.д.
Образец  поиска  отображается  в  поле  сообщений.  Нажатие  клавиша Space
инициирует поиск следующего имени, удовлетворяющего текущему образцу.  Для
сброса   образца  поиска  следует  нажать  клавиш,  отличный  от  клавишей
связанных с инкрементным поиском, например СТРЕЛКА ВВЕРХ.
}}
8{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Выход из Редактора 

       Выход из Редактора осуществляется при помощи клавиша Esc .
}}
3{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Меню команд Редактора 

       Меню команд позволяет выполнить:
      @редактирование модели (РЕДАКТИРОВАТЬ)@4@
      @тестирование  модели (ПРОВЕРИТЬ)@5@
      @сохранение  модели (СОХРАНИТЬ)@6@
      @обращение к Консультатору (ВЫПОЛНИТЬ)@7@
      @генерация гипертекстового и графического отчетов (ОТЧЕТ)@101@
      @возврат в окно МОДЕЛИ (ВЫХОД)@9@
       Все перечисленные  команды  делятся  на  команды  без  аргумента  и
команды  с  аргументом.  Для  выполнения  команды без аргумента необходимо
установить курсор на соответствующем пункте меню и  нажать  клавиш  Enter.
Для  выполнения  команды  с  аргументом  необходимо  установить  курсор на
соответствующем пункте меню, затем в появившемся боксе  установить  курсор
на нужном значении аргумента и нажать клавиш Enter.
}}
101{{
                                       @ОГЛАВЛЕНИЕ@99@

                            wr Команда ОТЧЕТ 

       Команда ОТЧЕТ в @меню команд Редактора@3@ позволяет произвести опера-
тивную генерацию гипертекстового и графического отчетов, используемых в  да-
льнейшем процессором графических объяснений. Данная команда может рассматри-
ваться как возможность оперативного вызова командного  файла  TOPOLOG.BAT.
}}
4{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Команда РЕДАКТИРОВАТЬ 

       Команда РЕДАКТИРОВАТЬ в @меню команд Редактора@3@ позволяет перейти
к просмотру и редактированию  символьных  атрибутов,  числовых атрибутов и
предложения сценария в зависимости от выбранного пункта подменю. Выбор про-
изводится нажатием клавиши Enter.
}}
5{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Команда  ПРОВЕРИТЬ 

       Команда  ПРОВЕРИТЬ в @меню команд Редактора@3@  позволяет  выполнить
тестирование загруженной модели с краткой (без сообщения о предупреждениях)
или полной диагностикой.
Протокол тестирования выводится в окно с именем @ПРОТОКОЛ ПРОВЕРКИ@100@.
}}
6{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Команда СОХРАНИТЬ 

       После выдачи команды СОХРАНИТЬ в @меню команд Редактора@3@ происхо-
дит запись загруженной модели в файл с расширением EXP и именем, соответс-
твующим имени модели. Если файл с указанным именем и расширением уже суще-
ствует, он предварительно сохраняется на диске с  расширением  EX$  (таким
образом обеспечивается сохранность предпоследней версии модели).
}}
7{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Команда ВЫПОЛНИТЬ 

     После выдачи команды ВЫПОЛНИТЬ в @меню команд Редактора@3@ происходит
обращение к Консультатору, который обеспечивает проведение консультации на
основе загруженной модели.
}}
9{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Команда ВЫХОД 

       По  команде  ВЫХОД в @меню команд Редактора@3@ производится освобо-
ждение  памяти,  занимаемой загруженной моделью, что дает возможность заг-
рузить новую модель с диска. Управление возвращается в окно @МОДЕЛИ@1@.
}}
21{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr СИМВОЛЬНЫЕ АТРИБУТЫ 

       Окно СИМВОЛЬНЫЕ АТРИБУТЫ обеспечивает  отображение  списка @имен@16@
символьных атрибутов загруженной модели и позволяет выполнить те же дейст-
вия, что и окно @МОДЕЛИ@1@. Разница заключается в следующем:
       операндами команд являются символьные атрибуты;
       в окне КОММЕНТАРИЙ отображается текст @развернутого имени@17@  атри-
бута, а также @шкала@18@ (если она определена; шкала отделяется от  развер-
нутого имени символом '$'или используется @шкала по умолчанию@19@);
       нажатие клавиша Esc приводит к уничтожению текущего окна и возврату
управления меню команд;
       нажатие  клавиша  Enter  приводит  к выдаче команды показа значений
текущего символьного атрибута;
       нажатие клавиша F2 приводит к выдаче команды показа @шаблона@20@
утверждения;
       нажатием клавишей  Ctrl и СТРЕЛКА ВНИЗ и Ctrl и СТРЕЛКА ВВЕРХ можно
переупорядочить имена символьных  атрибутов  в  списке  (это  относится  к
именам значений символьных атрибутов и именам числовых атрибутов);
       @Шкала,@18@ задаваемая в описании  символьного  атрибута, относится
ко всем  утверждениям  о  значениях  данного  атрибута.

       wrОграничение: в одной модели пользователь может описать не более wr100
символьных атрибутов.
}}
16{{
                                       @ОГЛАВЛЕНИЕ@99@

                            wr Имена атрибутов 

                   Числовые  и  символьные  атрибуты,  а  также   значения
символьных  атрибутов,  идентифицируются с помощью имен. Именем может быть
любая последовательность, состоящая не более чем  из  wr30  символов,  среди
которых могут быть:
      латинские прописные и строчные буквы;
      русские прописные и строчные буквы;
      цифры;
      символы: _(подчеркивание), #.
   Имя не должно начинаться с цифры.
}}
17{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Развернутые имена атрибутов 

       Развернутые   имена, представляющие лингвистические знания об атри-
бутах, задаются в описаниях атрибутов. Длина развернутого имени не  должна
превышать wr120 символов. Например, значение символьного атрибута "метод_об-
езболивания" может иметь развернутое имя "местное обезболивание с премеди-
кацией седуксеном и антигистаминным препаратом". В этом случае в сообщени-
ях, выдаваемых пользователю в ходе консультации, будет использоваться  это
развернутое имя.
       При использовании развернутых имен атрибутов допускается  использо-
вание лингвистических @шкал@18@.
       Задание развернутого имени атрибута не является обязательным.  Если
разработчик  не  укажет  это  имя,  в  сообщениях будет использоваться имя
атрибута.
}}
18{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Лингвистические шкалы 

               Для  представления  лингвистических  знаний о коэффициентах
определенности утверждений и  значениях  числовых  атрибутов  используются
специальные  конструкции,  называемые  шкалами.  Шкалы  представляют собой
списки равенств, ставящих в соответствие лингвистическим  (текстовым, дли-
ной не более wr40 символов) описаниям некоторые числовые значения. Равенства
в списке разделяются запятыми. Каждая шкала,  описанная  в модели,  должна
относиться  к  некоторому  числовому  атрибуту  или   утверждению.  Напри-
мер, лингвистические знания о коэффициенте определенности некоторого утве-
рждения могут быть представлены с помощью шкалы:
     "да=5, возможно=2.5, да или нет=0, маловероятно=-2.5, нет=-5".
       Все числовые константы, упоминаемые в шкале, не должны выходить  за
пределы  диапазона  допустимых  значений  числового  атрибута  (если шкала
относится к числовому атрибуту) или диапазона от -5.00 до 5.00 (если шкала
относится к утверждению). Шкалы могут задаваться как в описаниях атрибутов
и утверждений, так и в текстах вопросов к ним, при этом они должны начина-
ться с символа $.
       Шкалы применяются при формировании  текстов  вопросов  и  сообщений
конечному пользователю.
       Имеется возможность использования @шкалы по умолчанию.@19@
       Шкала используется в вопросе в том случае, если она задана в тексте
вопроса  или  в  описании  утверждения  или  атрибута,  о котором задается
вопрос. При  этом  из  лингвистических  описаний,  содержащихся  в  шкале,
формируется  меню,  и  конечному пользователю предлагается выбрать одно из
этих описаний.  В  качестве  ответа  на  вопрос  принимается  то  числовое
значение,   которое  соответствует  в  шкале  выбранному  лингвистическому
описанию. Например, если будет задан вопрос с приведенной выше  шкалой,  и
пользователь  выберет  ответ  "возможно",  то  в качестве ответа на вопрос
будет принято значение 2.50.
       Использование  шкалы  при  формировании  сообщения  о   вычисленном
коэффициенте  определенности  утверждения  или значении числового атрибута
осуществляется в  том  случае,  если  в  описании  этого  утверждения  или
числового  атрибута  задана  шкала.  При  этом выдается то лингвистическое
описание,  которому  соответствует   число,   наименее   отличающееся   от
вычисленного значения. Например, при использовании приведенной выше шкалы,
для  коэффициента  определенности  3.0  будет  выбрано  и помещено в текст
сообщения лингвистическое описание "возможно".
       Задание шкалы не  является  обязательным.  Если шкала есть, то  при
задании вопросов (выдаче сообщений) о значении числового атрибута значения
будут запрашиваться (выдаваться) не в числовой форме, а терминах  лингвис-
тических описаний, упоминаемых в шкале.
}}
19{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Стандартная шкала 

       Если  указан  только специальный символ '$', то будет  использована
@шкала@18@ по умолчанию:
      "Да=5,    Скорее всего=4,    Возможно=2,    Да или нет=0,
       Наверное нет=-2,    Маловероятно=-4,    Нет=-5".
}}
20{{
                                       @ОГЛАВЛЕНИЕ@99@

                       wr Использование шаблонов 

       Формирование  текстов вопросов и сообщений осуществляется с
использованием шаблонов. Шаблон представляет собой текст, длиной до wr180
символов, в который могут подставляться сведения об атрибутах и их зна-
чениях. Позиции для подстановки отмечаются в шаблоне следующим образом:
      ^^ - для коэффициентов определенности  утверждений  и  значений
 числовых атрибутов (или соответствующих им лингвистических описаний,
 описанных в шкалах);
      ^s - для имен символьных атрибутов;
      ^v - для имен значений символьных атрибутов;
      ^g - для имен простых целей;
      ^y - для имен утверждений и неразвернутых имен числовых атрибутов.

       При заполнении шаблонов предпочтение  всегда  отдается  развернутым
@именам@17@, если они указаны, и лингвистическим  описаниям,  если  заданы
соответствующие @шкалы@18@.
       Если  в  модели  не   описан   шаблон   утверждения,   используется
стандартный шаблон "^s - ^v".
       Выход из данного окна выполняется при помощи клавиша Esc.
}}
22{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr ЗНАЧЕНИЯ СИМВОЛЬНОГО АТРИБУТА 

       Окно ЗНАЧЕНИЯ СИМ. АТРИБУТА обеспечивает  отображение
списка @имен@16@ значений текущего символьного атрибута и позволяет вы-
полнять те же действия, что и окно @МОДЕЛИ@1@. Отличие в следующем:
       операндами команд являются значения символьных атрибутов;
       в окне КОММЕНТАРИЙ отображается текст @развернутого  имени@17@  те-
кущего значения текущего атрибута, а также @шкала@18@ (если она определена);
       нажатие клавиша Esc приводит к уничтожению текущего окна и возврату
управления в окно @СИМВОЛЬНЫЕ АТРИБУТЫ;@21@
       нажатие  клавиша  Enter приводит к выдаче команды показа правил для
вычисления  @коэффициента   определенности@25@   текущего   значения   те-
кущего символьного атрибута;
       нажатие   клавиша   F2   приводит  к  выдаче  команды  показа  окна
@УТВЕРЖДЕНИЕ@23@.
       Шкала,  задаваемая  в  описании  значения   символьного   атрибута,
относится  к  коэффициенту определенности только данного значения.

       wrОграничение: в одной модели пользователь может описать не более wr500
утверждений о значениях символьных атрибутов.
}}
23{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr УТВЕРЖДЕНИЕ 

       Окно УТВЕРЖДЕНИЕ содержит информацию об утверждении, связанном с те-
кущим  значением текущего атрибута. Эта информация включает в себя @имя@16@
утверждения и априорный @коэффициент определенности@25@  утверждения. Пере-
ключение между полями осуществляется  при  помощи  клавишей СТРЕЛКА ВВЕРХ и
СТРЕЛКА ВНИЗ. Выход из данного окна осуществляется при помощи клавиша Esc.
       Имена  утверждений  могут  использоваться  в правилах и предложениях
сценария как сокращенные ссылки на утверждения  вида:  "символьный  атрибут
<имя  символьного  атрибута> имеет значение <имя  значения>". Полная ссылка
на утверждение представляет собой пару имен  (имя  символьного  атрибута  и
имя значения) в квадратных скобках, разделенных точкой.
}}
24{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Числовые константы 

               Числовые константы, допустимые в языке представления знаний,
-  это положительные и отрицательные числа с десятичной точкой и точностью
до двух знаков  после  десятичной  точки,  не  превышающие  по  абсолютной
величине  64000.00.
}}
25{{
                                       @ОГЛАВЛЕНИЕ@99@

                       wr Коэффициент  определенности 

       @Числовые  константы,@24@  представляющие  коэффициенты  определен-
ности, являются числовыми константами, не превышающими по абсолютной вели-
чине 5.00.
       Коэффициент  определенности по умолчанию (или априорный коэффициент
определенности) задается числовой константой в диапазоне от -5.00 до 5.00.
Если она  не  указана  в  описании,  то  будет  считаться  равной  0,  что
соответствует  неопределенному  значению  истинности утверждения до начала
консультации.
}}
26{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr ЧИСЛОВЫЕ АТРИБУТЫ 

       Окно ЧИСЛОВЫЕ АТРИБУТЫ обеспечивает  отображение  списка @имен@16@
числовых  атрибутов  загруженной  модели и позволяет выполнить те же
действия, что и окно @СИМВОЛЬНЫЕ АТРИБУТЫ@21@. Разница заключается в сле-
дующем:
       операндами команд являются числовые атрибуты;
       нажатие клавиша Enter приводит к выдаче команды показа  правил  для
вычисления значения текущего атрибута;
       нажатие  клавиша  F2 приводит к выдаче команды показа окна
@ЗНАЧЕНИЕ ЧИСЛ.АТРИБУТА.@27@

       wrОграничение: в одной модели пользователь может описать не более wr300
числовых атрибутов.
}}
27{{
                                       @ОГЛАВЛЕНИЕ@99@

                    wr ЗНАЧЕНИЕ ЧИСЛОВОГО АТРИБУТА 

       Окно ЗНАЧЕНИЕ ЧИСЛ.АТРИБУТА  содержит информацию о граничных значе-
ниях диапазона, из которого может получать значения текущий атрибут, и его
априорное значение.
       Область  допустимых  значений числового атрибута описывается в виде
диапазона, который задается двумя  @числовыми константами@24@, представля-
ющими его нижнюю и верхнюю  границы. Граничные  значения  указываются  для
любого атрибута обязательно.
      Априорное значение может отсутствовать, в этом случае соответствующее
поле  содержит пробелы. Если априорное значение задается, то оно  не должно
выходить за пределы области допустимых значений данного атрибута.
      Переключение между полями осуществляется при помощи клавишей  СТРЕЛКА
ВВЕРХ и СТРЕЛКА ВНИЗ. Выход из окна осуществляется по нажатию клавиша Esc.
}}
28{{
                                       @ОГЛАВЛЕНИЕ@99@

                              wr ПРАВИЛА 

       Окно ПРАВИЛА обеспечивает отображение соответствующего списка @имен@29@
правил, расположенных в порядке убывания приоритета, и позволяет выполнить
те же действия, что и окно @МОДЕЛИ@1@. Различие заключается в следующем:
       операндами команд являются правила;
       в окне КОММЕНТАРИЙ отображается текст @комментария к правилу;@30@
       нажатие клавиша Esc приводит к уничтожению текущего окна и возврату
управления в предыдущее окно;
       нажатие клавиша Enter приводит к выдаче команды показа окон
@ЕСЛИ ТО@31@, используемых для ввода, просмотра или корректировки условия
применимости и действия текущего правила;
       нажатие  клавишей  Ctrl  и  СТРЕЛКА  ВВЕРХ  приводит  к   повышению
приоритета  текущего  правила,  причем  имя  правила продвигается в списке
правил на позицию вверх;
       нажатие  клавишей  Ctrl  и  СТРЕЛКА  ВНИЗ  приводит   к   понижению
приоритета  текущего  правила,  причем  имя  правила продвигается в списке
правил на позицию вниз.

       Окно  ПРАВИЛА  позволяет  выполнить тиражирование правил при помощи
специального буфера. При нажатии клавиша F3 текущее правило  копируется  в
буфер и находится там либо до окончания работы Редактора, либо до записи в
буфер  нового  правила.  При  нажатии  клавиша  F4  правило, находящееся в
буфере,  вставляется  в  текущий  список  правил,  при  этом  пользователю
предлагается  присвоить  ему  уникальное  имя.  Это выполняется аналогично
переименованию правила.

       wrОграничение: в одной модели пользователь может описать не более wr1000
правил.
}}
29{{
                                       @ОГЛАВЛЕНИЕ@99@

                            wr Имена правил 

       Именами правил могут быть произвольные последовательности  символов
длиной  до  wr20  байт.  Имена правил должны быть уникальными. Первый символ
имени идентифицирует тип правила:

                      Типы  правил

 ┌──────────────────────────────┬───────────────────────────────┐
 │ Первая буква в имени правила │                               │
 ├──────────────┬───────────────┤        Тип правила            │
 │   Латинская  │    Русская    │                               │
 ├──────────────┼───────────────┼───────────────────────────────┤
 │       A      │       А       │ Сложный альтернативный вопрос │
 │       D      │       Д       │ Сложный дистрибутивный вопрос │
 │       Q      │       П       │ Простой вопрос                │
 │       L      │       Л       │ Логическое правило            │
 │       N      │       Р       │ Арифметическое правило        │
 │       В      │       Б       │ Байесовское правило           │
 └──────────────┴───────────────┴───────────────────────────────┘
}}
30{{
                                       @ОГЛАВЛЕНИЕ@99@

             wr Комментарии к правилам и предложениям сценария 

       Комментарии - это  произвольные  тексты  длиной  до  wr300 байт,
которые используются в режиме консультации для формирования объяснений.
}}
74{{
                                       @ОГЛАВЛЕНИЕ@99@

               wr Действия и условия применимости правил 

       Для описания действий правил, а также условий применимости правил и
предложений сценариев используются @арифметические@75@ и @логические@76@
выражения.

       wrОграничение: арифметические и логические выражения не должны содер-
жать более wr500 элементов (т.е. знаков операций, имен,  запятых  и круглых
скобок).
}}
75{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Арифметические  выражения 

       Арифметические  выражения  используются как в правилах, для задания
формул, по которым следует вычислять значения числовых атрибутов и утверж-
дений, так и в @логических выражениях@76@.
      Арифметические выражения строятся стандартным образом с помощью опе-
раций  сложения  (+),  вычитания (-), умножения (*), деления (/),  получе-
ния остатка от деления нацело (%) и скобок, а также@встроенных функций@37@.
       В арифметических выражениях можно использовать числовые константы и
простые  цели, т.е. числовые атрибуты и утверждения. Ссылаться на числовые
атрибуты можно по именам (не развернутым),  на  утверждения  -  по  именам
утверждений   или   по   парам   вида:  [<имя  символьного  атрибута>.<имя
значения>].
       Арифметические  выражения  вычисляются  слева   направо.   Порядком
выполнения операций можно управлять с помощью круглых скобок.

       Пример арифметического выражения:

            вес_пациента - (рост_пациента_в_см - 100.00)

В  данном  арифметическом  выражении  исходя  из  значений числовых
атрибутов  "вес_пациента"  и  "рост_пациента_в_см"  вычисляется   величина
избыточного веса пациента.
}}
76{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Логические  выражения 

       Логические выражения используются для записи высказываний о
состоянии проблемной  области  -  условий  применимости  правил  вывода  и
предложений сценария. Значением логического выражения является коэффициент
определенности соответствующего ему высказывания.
       Логические выражения строятся из высказываний, которые представляют
высказывания   о   проблемной   области   и  значениями  которых  являются
коэффициенты  определенности,  с   помощью   операций:   конъюнкции   (&),
дизъюнкции (|) и отрицания (~).
        В логических выражениях могут быть использованы операции: && и  ||
(конъюнкция и дизъюнкция с принудительным завершением). Эти операции выпо-
лняются так же, как & и | соответственно, с  единственным  отличием:  если
первый операнд неположителен (в случае &) или положителен (в случае |), то
второй операнд не рассматривается, и  в  качестве  результата  принимается
значение первого операнда.
       Высказывания о проблемной области могут быть представлены:
     утверждениями;
     обращениями к @логическим функциям@84@;
     арифметическими отношениями: равно ( = ), больше ( > ) и меньше (<);
     логическими выражениями.
       Кроме  того,  можно  задавать коэффициенты определенности с помощью
числовых констант, числовых атрибутов и арифметических выражений, если  их
значения не выходят за пределы диапазона от -5.00 до +5.00.
       Пример логического выражения:

         (возраст > 40) & (бронх_астма > 2) & анафилактический_шок

       При  значении  числового  атрибута  "возраст",   равном   44,   при
коэффициенте  определенности  утверждения  о  наличии  бронхиальной астмы,
равном 3, и коэффициенте определенности  утверждения  об  анафилактическом
шоке,   равном   4,  получаем  в  качестве  значения  данного  логического
выражения 4.
}}
84{{
                                       @ОГЛАВЛЕНИЕ@99@

                 wr  Логические функции  

     AF(A) - все утверждения о всех возможных  значениях  символьного
 атрибута A ложны (All False);
     EF(A)  - среди всех утверждений о значениях символьного атрибута
 A есть ложные (Exist False);
     AT(A) - все утверждения о всех возможных  значениях  символьного
 атрибута A истинны (All True);
     ET(A)  - среди всех утверждений о значениях символьного атрибута
 A есть истинные (Exist True).

     Следует отметить, что в функциях  ET  и EF  рассматриваются только те
из всех возможных утверждений об атрибуте A,  коэффициенты  определенности
которых  удалось  вывести. Для вычисления значений функций AT и AF необхо-
димо рассмотрение всех возможных утверждений.
     Функции  @unc, un@85@, @UNC и UN@86@ позволяют определять, выведены ли
те или иные цели к моменту анализа логического выражения.

      eq(X,Y,E)  - числа X и Y равны с точностью до E;

wr   eq(X,Y,E) = {  5.0, если   abs(X-Y) < E * max[abs(X),abs(Y)],
wr                 -5.0 иначе                                     

      gte(X,Y,E) - число X больше или равно Y с точностью до E;

wr   gte(X,Y,E) = { 5.0, если   X >= Y или 0 < Y-X < E * max[abs(X),abs(Y)],
wr                 -5.0 иначе                                               

      lte(X,Y,E) - число X меньше или равно Y с точностью до E,

wr   lte(X,Y,E) = { 5.0, если   Y >= X или 0 < X-Y < E * max[abs(X),abs(Y)],
wr                 -5.0 иначе                                               
              
      где 0.00 < E < 1.00.

       L-S функции используются при описании нечетких понятий. Каждая  L-S
функция   предоставляют   эксперту  стандартные  средства  для  вычисления
коэффициента  определенности,  с  которым  значение   числового   атрибута
удовлетворяет  нечеткому  понятию:
      @L_ll@78@     @S_ll@81@
      @L_lr@79@     @S_lr@82@
      @L_rr@80@     @S_rr@83@

}}
85{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Функции  unc  и  un 

       Функции  unc  и  un  применяются  к  простым  целям.  Функция   unc
возвращает  значение  +5.00,  если цель еще не выводилась, и -5.00 во всех
остальных случаях. Функция un возвращает  значение  +5.00,  если  значение
цели вывести не удалось, и -5.00 во всех остальных случаях.
}}
86{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr Функции UNC и UN 

       Функции UNC и UN применяются к символьным атрибутам (т.е. к сложным
целям).  Функция  UNC  возвращает  значение  +5.00,  если  среди  значений
атрибута  есть  хотя  бы  одно  с  еще   не   выводившимся   коэффициентом
определенности,  и  -5.00 во всех остальных случаях. Функция UN возвращает
значение +5.00, если среди  значений  атрибута  есть  хотя  бы  одно,  для
которого  не  удалось  вывести  коэффициент определенности, и -5.0 во всех
остальных случаях.
}}
31{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr ЕСЛИ и ТО правил 

       Окна ЕСЛИ и ТО содержат соответственно @условие применимости@74@
правила  (если текст отсутствует, значение условия считается равным +5)
и  @действие@74@ правила.
       Условие применимости правила - это логическое  выражение,  значение
которого вычисляется в момент обращения к правилу.
       Действие правила указывает, каким образом должно вычисляться значе-
ние цели правила в том случае, когда правило применимо. Вид действия  пра-
вила определяется типом правила.
       Целью простого правила может быть числовой атрибут или утверждение,
сложного - символьный атрибут.
       Подробное описание всех типов правил содержится в документе  "Комп-
лекс программ ЭКО. Описание применения" (раздел 5).
       Первоначально активным является окно ТО. Передать  управление  окну
ЕСЛИ и обратно можно при помощи клавиша F3.
       Возврат в окно @ПРАВИЛА@28@ происходит при помощи клавиша Esc.
       В   процессе  ввода  правил  перед  пользователем  часто  возникает
следующая проблема. Необходимо приостановить процесс ввода правила с  тем,
чтобы  просмотреть  и/или  отредактировать  другой фрагмент модели. Однако
возврат в окно ПРАВИЛА обычным способом невозможен, если в тексте  правила
имеются  ошибки.  Для  того,  чтобы  обойти  эту  трудность, предусмотрена
команда временного выхода путем одновременного  нажатия  клавишей  Ctrl  и
Esc.  В  этом случае, информация, находящаяся в окнах ЕСЛИ и ТО помещается
не в модель, а в буфер. Таким образом, процесс редактирования модели может
быть продолжен. При повторной выдаче команды показа окон  ЕСЛИ  и  ТО  для
данного  правила соответствующий текст автоматически копируется из буфера,
если туда не копировались за это время другие правила, в противном  случае
текст правила берется из модели.
       При  вводе  правил  имеется  возможность  @"блочной"  сборки@32@
текста условия и действия.
}}
32{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Блочная сборка 

       Блочная сборка предназначена для того, чтобы облегчить ввод правил
и предложений сценария. Когда курсор находится в окне ЕСЛИ или ТО, нажатие
клавиши Grey +, инициирует меню, с помощью которого  можно получить список
символьных атрибутов, числовых атрибутов, имен утверждений, ссылок на  ут-
верждения, предложений сценария,    @логических@84@  и   @арифметических@37@
функций или @типов действия@36@ для предложений сценария. Если в полученном
списке при помощи клавиша Enter выбрать элемент, он будет вставлен в ту по-
зицию текста правила или сценария, откуда был произведен выход в меню.
       В меню блочной сборки можно задавать шаблон  для  поиска элементов.
Например, для того, чтобы получить список числовых атрибутов, начинающихся
с буквы А, следует подвести курсор к строке wr Ч.Атр.   * , нажать Grey +,
откорректировать шаблон поиска: wr Ч.Атр.   А*   и нажать  два  раза  на
Enter.
}}
104{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Конструкция [.] 

       Данная конструкция [.] используется при @"блочной" сборке@32@
для получения шаблона при задании ссылки на утверждение.
      Имена утверждений могут использоваться в правилах и  предложени-
 ях  сценария как сокращенные ссылки на утверждения вида: "символьный
 атрибут <имя символьного атрибута> имеет значение  <имя  значения>".
 Полная  ссылка на утверждение представляет собой пару имен (имя сим-
 вольного атрибута и имя значения) в квадратных скобках,  разделенных
 точкой.
}}
105{{
                                       @ОГЛАВЛЕНИЕ@99@

                             wr Символ @ 

      Данный символ @ используется для подготовки вызова внешней пр-
ограммы при @"блочной" сборке@32@.
     Текст сообщения внешней программе формируется в виде  командной
строки,  признаком которой  является специальный символ '\@' в начале
текста. Передача данных от внешней программы в ЭС производится через
файл  EKO.ANS.
     Файл EKO.ANS должен представлять собой одну или несколько строк
в формате:

           <команда> [: <номер альтернативы> [: <значение>]]

      при этом, номер альтернативы и/или значение могут отсутствовать.
 Команда представляет собой символ латинского алфавита, номер альтер-
 нативы - целое число, значение - вещественное число.

     Перечень возможных команд, их интерпретация и другие  характерис-
 тики приведены в таблице.

┌────────────┬───────────────────┬───────────────────┬───────────────────┐
│   команда  │  интерпретация    │номер альтернативы │  значение         │
├────────────┼───────────────────┼───────────────────┼───────────────────┤
│     H      │   помощь (F1)     │  не требуется     │  не требуется     │
│            │                   │                   │                   │
│     U      │   НЕ ЗНАЮ (F2)    │  не требуется     │  не требуется     │
│            │                   │                   │                   │
│     R      │   повторить       │  не требуется     │  не требуется     │
│            │   вопрос (F3)     │                   │                   │
│            │                   │                   │                   │
│     C      │   выйти в меню    │  не требуется     │  не требуется     │
│            │   команд (F4)     │                   │                   │
│            │                   │                   │                   │
│     W      │   ЗАЧЕМ? (F5)     │  обязателен для   │  не требуется     │
│            │                   │  сложных вопросов │                   │
│            │                   │                   │                   │
│     P      │   просмотр прото- │  не требуется     │  не требуется     │
│            │   кола (F6)       │                   │                   │
│            │                   │                   │                   │
│     L      │   функциональная  │  обязателен для   │  не требуется     │
│            │   помощь (F10)    │  сложных вопросов │                   │
│            │                   │                   │                   │
│     E      │   конец консуль-  │  не требуется     │  не требуется     │
│            │   тации (Esc)     │                   │                   │
│            │                   │                   │                   │
│     V      │   ответ           │  обязателен для   │  указывается      │
│            │                   │  сложных вопросов,│  для простых и    │
│            │                   │  для простых ука- │  сложных дистрибу-│
│            │                   │  зывается символ  │  тивных вопросов  │
│            │                   │  '*'              │                   │
│            │                   │                   │                   │
│     K      │   ошибка          │  интерпретируется │  не требуется     │
│            │                   │  как код ошибки   │                   │
│            │                   │                   │                   │
│            │                   │                   │                   │
└────────────┴───────────────────┴───────────────────┴───────────────────┘
      
      Как правило,  EKO.ANS  может  содержать  только  одну  команду.
 Исключение составляет случай, когда задается сложный  дистрибутивный
 вопрос. При ответе на него EKO.ANS может содержать несколько  команд
 (с кодом V).

 Пример:

       ПРАВИЛО       П_зона
       ЦЕЛЬ          далеко
       ЕСЛИ
       ТО            @gq CGA way.zon

      При применении данного правила будет выдана команда  операцион-
 ной системы    "gq CGA way.zon",    после     выполнения    которой
 "ответ" должен находиться в файле EKO.ANS в символьном виде, например,
 "V:*:4.5".
}}
106{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Конструкция  -'- 

      Конструкция -'- используется при @"блочной" сборке@32@ для  задания
ссылки на условие применимости предыдущего предложения сценария.
      В этом случае действие выполняется только тогда,  когда выполнилось
условие применимости предыдущего предложения, при этом считается, что ус-
ловие применимости данного предложения также выполнилось.

      Пример фрагмента сценария (повторение консультации с новыми ис-
 ходными данными):
      
      повторить  СБРОС
                 ЕСЛИ повторить_решение

      цикл       ПЕРЕХОД начало
                 ЕСЛИ -"-

      При выполнении предложения "повторить" будет выведено  значение
 утверждения о необходимости повторить решение задачи (для рассмотре-
 ния  новой  ситуации). Если значение этого утверждения положительно,
 произойдет отмена всех значений, полученных во  время  консультации.
 Затем будет выполняться предложение сценария с именем "начало".
}}
102{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Список атрибутов 

      Данное окно отображает один из списков (в зависимости от  предыдущей
команды):
      - символьных атрибутов;
      - числовых атрибутов;
      - имен утверждений;
      - ссылок на утверждения;
      - имен предложений сценария.
      При помощи этого окна можно производить так называемую @"блочную сборку"@32@.
Если в полученном списке при помощи клавиша Enter выбрать элемент, он будет
вставлен в ту  позицию текста правила или сценария, откуда было инициирова-
но данное окно.
      Выйти из окна можно нажатием клавиша Esc.
}}
33{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr ПРЕДЛОЖЕНИЯ СЦЕНАРИЯ 

       Окно СЦЕНАРИЙ обеспечивает отображение списка @имен@16@ предложений,
входящих в сценарий  консультации  данной  модели.  Работа  с  этим  окном
аналогична работе с окном @ПРАВИЛА@28@. Различие заключается в следующем:
       операндами команд являются предложения, составляющие сценарий;
       в окне КОММЕНТАРИЙ отображается текст @комментария к предложению;@30@
       нажатие клавиша Esc приводит к уничтожению текущего окна и возврату
управления в @меню команд@3@;
       нажатие клавиша Enter приводит к переходу к окнам @ЕСЛИ и ТО;@34@
       нажатием клавишей Ctrl и СТРЕЛКА ВВЕРХ  ,а  также  Ctrl  и  СТРЕЛКА
ВНИЗ, изменяется порядок предложений в сценарии.
       Клавиши F3 и F4 для предложений сценария не используются.
       По клавишу F2 осуществляется переход в окно @СООБЩЕНИЕ.@35@

       wrОграничение: в одной модели пользователь может описать не более wr100
предложений сценария.
}}
34{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr ЕСЛИ и ТО сценария 

       ЕСЛИ и ТО это окна содержащие соответственно  условие  применимости
предложения сценария (если текст условия отсутствует, значение условия счи-
тается равным +5) и действие предложения.
       Условие применимости можно задавать либо так  же,  как  в  правилах
(см. @ЕСЛИ ТО правил@31@), либо в виде ссылки на условие предыдущего дейс-
твия. В первом случае проверка условия применимости осуществляется аналог-
ично проверке  условий в правилах. Во втором случае  действие  выполняется
только  тогда,  когда  выполнилось @условие применимости предыдущего@106@
предложения, при этом считается, что условие применимости данного предло-
жения также выполнилось.
       Вид параметров действия зависит от @типа действия.@36@
       Подробное описание  предложений  сценария  содержится  в  документе
"Комплекс программ ЭКО. Описание применения" (раздел 5).
       Первоначально  активным  является окно ТО. Передать управление окну
ЕСЛИ и обратно можно при помощи клавиша F3.
       Возврат в окно @СЦЕНАРИЙ@33@ производится при помощи клавиша Esc.
       Поскольку   операции   с   буфером   для  предложений  сценария  не
реализованы, временный выход в данном случае не предусмотрен.
       При вводе текста предложения сценария также может быть использована
возможность @"блочной" сборки@32@.
}}
35{{
                                       @ОГЛАВЛЕНИЕ@99@

                            wr СООБЩЕНИЕ 

       В  окно  СООБЩЕНИЕ   помещается   информация,   не   представляющая
правильных  арифметических  или  логических  выражений языка представления
знаний: тексты сообщений, имена файлов и т.д. В это окно помещается первый
параметр для действий 
@СООБЩЕНИЕ,@40@ @СТОП,@44@ @ПРИЕМ,@45@ @РЕЗУЛЬТАТ,@39@ @ПЕРВЫЙ_РЕЗУЛЬТАТ,@202@
@ВЫПОЛНИТЬ,@47@   @ЗАДАЧА,@48@ @ЗАГРУЗИТЬ_ТОЧКУ,@50@   @СДЕЛАТЬ_ТОЧКУ,@51@
@СДЕЛАТЬ_ТОЧКУ_ВЫХОД,@200@ @НАСТРОЙКА,@201@ ,@ВОЗВРАТ.@46@ 
      Возврат в окно @СЦЕНАРИЙ@33@ производится при помощи клавиша Esc.
}}
36{{
                                       @ОГЛАВЛЕНИЕ@99@

                    wr Типы действия для предложений сценария 

      Типы действия для предложений сценария могут быть:
    @ЦЕЛЬ@38@
    @РЕЗУЛЬТАТ@39@
    @ПЕРВЫЙ_РЕЗУЛЬТАТ@202@
    @СООБЩЕНИЕ@40@
    @ПЕРЕХОД@41@
    @СБРОС@42@
    @СБРОС_ВЫВОДА@43@
    @СБРОС_КРОМЕ@203@
    @СТОП@44@
    @ПРИЕМ@45@
    @ВОЗВРАТ@46@
    @ВЫПОЛНИТЬ@47@
    @ЗАДАЧА@48@
    @АРГУМЕНТЫ@49@
    @ЗАГРУЗИТЬ_ТОЧКУ@50@
    @СДЕЛАТЬ_ТОЧКУ@51@
    @СДЕЛАТЬ_ТОЧКУ_ВЫХОД@200@
    @НАСТРОЙКА@201@
    @ВЫХОД@103@
}}
37{{
                                       @ОГЛАВЛЕНИЕ@99@

                         wr Арифметические функции 

      abs(X)   - абсолютное значение X;
      exp(X,Y) - число X в степени Y;
      sq(X)    - квадратный корень из X;
      lg(X)    - десятичный логарифм X;
      inth(X)  - округление Х в большую сторону;
      intl(X)  - округление Х в меньшую сторону;
      sin(X)   - синус Х (Х в радианах);
      cos(X)   - косинус Х (Х в радианах);
      tg(X)    - тангенс Х (Х в радианах);
      ctg(X)   - котангенс Х (Х в радианах);
      asin(X)  - арксинус Х (Х в радианах);
      atg(X)   - арктангенс Х (Х в радианах);
      rad(X)   - получение значения в радианах (Х в градусах);
      grad(X)  - получение значения в градусах (Х в радианах);

      @more_cert(X,A)@77@  - количество значений символьного атрибута   A,
коэффициенты определенности которых не ниже значения X;
      @less_cert(X,A)@77@  -  количество значений символьного атрибута  A,
коэффициенты определенности которых не выше значения  X,  где  значение  X
задается либо числовой константой, либо числовым атрибутом.
}}
78{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Функция  L_ll 

       Функции  L_ll, L_rr, L_lr задаются с помощью параметров A, B, C и D,
которые должны удовлетворять условию A < B =< C < D:

                    ╓  -5,                если  X <= A;
                    │
                    │  10*X - 5*A - 5*B
      L_ll(A,B,X) = ┤  ──────────────── , если  A < X <= B;
                    │        B - A
                    │
                    └   5,                если  X > B,


      L_ll (A, B, X)
           ^
          5┤                   ───────
           │                 /
           │               /
          0├────────┬──────────┬──────────────────> X
           │        A   /      B
           │          /
         -5┤   ──────
           │

}}
79{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Функция  L_lr 

       Функции  L_ll, L_rr, L_lr задаются с помощью параметров A, B, C и D,
которые должны удовлетворять условию A < B =< C < D:
                        ╓  L_ll(A,B,X), если X < C;
      L_lr(A,B,C,D,X) = ┤
                        └  L_rr(C,D,X), если X >= C.

       Например, понятие "около 7" может быть описано как L_lr(5,7,7,9,X).
При X, равном 6.5, коэффициент определенности утверждения  о  том,  что  X
имеет значение около 7, равен 2.5.

      L_lr (A, B, C, D, X)
           ^
          5┤                   ─────
           │                 /       \
           │               /           \
          0├────────┬──────────┬────┬────────┬───────> X
           │        A   /      B    C     \  D
           │          /                     \
         -5┤   ──────                         ──────
           │

}}
80{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Функция  L_rr 

       Функции  L_ll, L_rr, L_lr задаются с помощью параметров A, B, C и D,
которые должны удовлетворять условию A < B =< C < D:
                    ╓  5,                 если  X <= C;
                    │
                    │  - 10*X + 5*C + 5*D
      L_rr(C,D,X) = ┤  ──────────────── , если  C < X <= D;
                    │        D - C
                    │
                    └   -5,               если  X > D,

      L_rr (C, D, X)
           ^
          5┤   ──────
           │          \
           │            \
          0├────────┬──────────┬──────────────────> X
           │        C      \   D
           │                 \
         -5┤                   ──────
}}
81{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Функция  S_ll 

       Функции S_ll, S_rr, S_lr задаются с помощью параметров A, B, C, D,
E и F , которые должны удовлетворять условию A =< B =< C =< D =< E =< F,
A < C , D < F, следующим образом (X - аргумент функции):

                      ┌  -5,                если  X <= A;
                      │
                      │    ┌ X - A ┐2
                      │  5*│ ───── │ - 5,   если  A < X <= B;
                      │    └ B - A ┘
      S_ll(A,B,C,X) = ┤
                      │        ┌ C - X ┐2
                      │  5 - 5*│ ───── │ ,  если  B < X <= C;
                      │        └ C - B ┘
                      │
                      └   5,                если  X > C,

      S_ll (A, B, C, X)
           ^
          5┤                   . ───────
           │                .
           │               .
          0├────────┬─────┬─────┬─────────────────────> X
           │        A    .B     C
           │            .
         -5┤   _____ .
}}
82{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Функция  S_lr 

       Функции S_ll, S_rr, S_lr задаются с помощью параметров A, B, C, D,
E и F , которые должны удовлетворять условию A =< B =< C =< D =< E =< F,
A < C , D < F, следующим образом (X - аргумент функции):

                            ┌  S_ll(A,B,C,X), если X < D;
      S_lr(A,B,C,D,E,F,X) = ┤
                            └  S_rr(D,E,F,X), если X >= D.

       Например,  если  понятие "около 7" описано как S_lr(5,6,7,7,8,9,X),
то при X, равном 6.5, коэффициент определенности утверждения о том, что  X
имеет значение около 7, равен 4.75.

      S_lr (A, B, C, D, E, F, X)
           ^
          5┤                   . ──── .
           │                .            .
           │               .              .
          0├────────┬─────┬─────┬────┬─────┬─────┬──────> X
           │        A    .B     C    D     E.    F
           │            .                    .
         -5┤  ______ .                          . ______
           │
}}
83{{
                                       @ОГЛАВЛЕНИЕ@99@

                           wr Функция  S_rr 

       Функции S_ll, S_rr, S_lr задаются с помощью параметров A, B, C, D,
E и F , которые должны удовлетворять условию A =< B =< C =< D =< E =< F,
A < C , D < F, следующим образом (X - аргумент функции):

                      ┌  5,                 если  X <= D;
                      │
                      │        ┌ X - D ┐2
                      │  5 - 5*│ ───── │ ,  если  D < X <= E;
                      │        └ E - D ┘
      S_rr(D,E,F,X) = ┤
                      │    ┌ F - X ┐2
                      │  5*│ ───── │  - 5 , если  E < X <= F;
                      │    └ F - E ┘
                      │
                      └   -5,               если  X > F,

      S_rr (D, E, F, X)
           ^
          5┤   ───── .
           │            .
           │             .
          0├────────┬─────┬─────┬─────────────────────> X
           │        D     E.    F
           │                .
         -5┤                   . ______
           │
}}
77{{
                                       @ОГЛАВЛЕНИЕ@99@

                 wr Функции more_cert(X,A), less_cert(X,A) 

       Эти  функции  удобно  использовать  в тех случаях, когда необходимо
оценить выведенные результаты. Например, при  решении  задачи  диагностики
можно  определить,  удалось  ли  выявить  хотя  бы  несколько  диагнозов с
достаточной, с точки зрения эксперта, степенью уверенности: если поставлен
хотя бы один диагноз, т.е. more_cert(4.0,диагноз) >  0  или  все  диагнозы
отвергнуты,  т.е.  less_cert(-4.0,диагноз)  =  N,  где N - число возможных
диагнозов, то можно закончить решение задачи;  иначе  необходимо  провести
более  подробный  анализ  с  привлечением  дополнительных  данных.  Другой
распространенный случай использования этих функций  -  оценка  результатов
тестирования:   сколько   тестов   дали  положительный  или  отрицательный
результат.
}}
38{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr Действие  ЦЕЛЬ 

       Параметры  действия  ЦЕЛЬ  задают  в  виде списка имен, разделенных
запятыми или пробелами, исходные цели консультации,  а  также  порядок  их
рассмотрения.  Параметрами  могут  быть утверждения, числовые и символьные
атрибуты.
      Пример предложения сценария:

      3  ЦЕЛЬ  ДИАГНОЗ
      ЕСЛИ [задача.диагностика]
      "Если требуется решить задачу диагностики, вывести значения
       символьного атрибута ДИАГНОЗ"

       При   выполнении  данного  предложения  в  сценарии  сначала  будет
определено значение утверждения [задача.диагностика], и, если оно окажется
положительным, будет выводиться  значение  символьного  атрибута  ДИАГНОЗ,
т.е.  будут  определяться коэффициенты определенности утверждений обо всех
значениях данного атрибута.
}}
39{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  РЕЗУЛЬТАТ 

       Действие  РЕЗУЛЬТАТ  задает  список  целей,  сообщения  о  значении
которых  должны  быть выданы на экран, а также уровень выдачи результатов.
Сообщения  будут  выдаваться  только  о  тех  утверждениях,   коэффициенты
определенности  которых  не  ниже уровня выдачи. Сообщения выдаются в виде
списка развернутых имен целей  и  их  значений.  Если  параметры  действия
содержат  символьный  атрибут, то утверждения о данном атрибуте при выдаче
упорядочиваются по убыванию коэффициентов  определенности.
       Сообщения о результате могут выдаваться по шаблону выдачи, задавае-
мому в качестве первого (необязательного) параметра. Если шаблон выдачи
не указан, используется стандартный:  wb^g: ^^ .
       Перед выдачей сообщения просматривается список  целей-параметров  и
выводятся те из них, значения которых еще не были получены.

       Пример предложения сценария:
       
   1  РЕЗУЛЬТАТ -3, анестетик
   "Выбор средства обезболивания"

       При выполнении этого действия будут вычислены значения  символьного
атрибута  "анестетик"  (предложение  является  первым  в сценарии, поэтому
никакие значения еще не выведены), а затем на экран будут выданы сообщения
о тех значениях атрибута "анестетик", коэффициенты определенности  которых
не  ниже  -3.00.  Сообщения будут упорядочены по убыванию их коэффициентов
определенности. При выдаче будет использован стандартный шаблон. Например,
если выведено:

      [анестетик.новокаин]  = -5.00,
      [анестетик.тримекаин] =  5.00,
      [анестетик.лидокаин]  =  2.00,

и шаблон утверждений для символьного атрибута "анестетик" имеет вид
"рекомендуемый анестетик - ^v", причем развернутые имена значений атрибута
в модели не указаны, то на экран будет выведено следующее:

      рекомендуемый анестетик - тримекаин: 5.00
      рекомендуемый анестетик - лидокаин : 2.00
      
      Это же предложение можно задать с шаблоном выдачи:
      
   1  РЕЗУЛЬТАТ "с определенностью ^^ рекомендуется: ^v", -3, анестетик
   "Выбор средства обезболивания"
   
      В этом случае на экран выведется:
                                       
       с определенностью 5.00 рекомендуется: тримекаин
       с определенностью 2.00 рекомендуется: лидокаин
}}
40{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  СООБЩЕНИЕ 

       Действие  СООБЩЕНИЕ,  как  и действие @РЕЗУЛЬТАТ,@39@ предназначено
для описания сообщений конечному пользователю, однако в действиях  данного
типа разработчик может указывать произвольный текст сообщения. Текст зада-
ется с помощью @шаблона@20@, при этом его длина может достигать wr1600  сим-
волов.
       Первым параметром действия является шаблон сообщения, за ним должны
быть указаны простые цели в  том  порядке,  в  каком  их  значения  должны
подставляться  в  сообщение. Если к моменту выполнения действия какие-либо
из требуемых значений не будут известны, то сначала будет произведен вывод
их значений  и  только  после  этого  будет  выдано  сообщение.  Если  для
каких-либо  простых  целей в списке параметров  определены @шкалы@18@,  то
выдача их значений будет осуществляться в символьном виде в соответствии с
этими шкалами.
       Если  требуется  вывести сообщение не на экран монитора, а передать
внешней программе ( через файл  EKO.MSG  ),  то  перед  текстом  сообщения
ставится специальный символ '$'.
       Если после выдачи текста сообщения требуется приостановить консуль-
тацию (сделать паузу), то перед  текстом  сообщения  ставится  специальный
символ '@'.

      Пример предложения сценария:

      5 СООБЩЕНИЕ
      "Для проведения местной анестезии (уверенность ^^) можно
 использовать следующие лекарственные препараты:
      тримекаин (с уверенностью ^^)
      лидокаин  (с уверенностью ^^)",
 [метод_обезболивания.местная_анестезия], [анестетик.тримекаин],
 [анестетик.лидокаин]
      ЕСЛИ [метод_обезболивания.местная_анестезия]
               "Если допустимо использование местной анестезии,
                то в качестве анестетиков могут быть использованы
                тримекаин  и лидокаин"

       При  выполнении  данного  действия будет выведено, если это не было
сделано раньше, значение  утверждения  о  возможности  проведения  местной
анестезии  и,  если  оно  окажется положительным, будет выполнен переход к
определению   значений   утверждений   о    возможности    применения    в
рассматриваемой   ситуации   тримекаина   и   лидокаина.   Пусть  значение
утверждения о возможности местной анестезии будет равно 2.00,  а  значения
утверждений  о  возможности применения тримекаина и лидокаина -5.00 и 5.00
соответственно. Тогда на экран будет выдано следующее сообщение:

       "Для проведения местной анестезии (уверенность  2.00)  можно
 использовать следующие лекарственные препараты:
      тримекаин (с уверенностью -5.00),
      лидокаин  (с уверенностью 5.00) .

       В тексте сообщения допускается ссылка на наиболее вероятное  значе-
ние символьного атрибута: из всех значений выбирается то, у которого коэф-
фициент определенности наибольший, а если таких значений несколько, то вы-
бирается первый по порядку. Для задания такой ссылки необходимо в символах,
отмечающих позицию для подстановки, поставить  знак  '!'  (восклицательный
знак) после '^', а в списке имен для подстановки указать  имя  символьного
атрибута. Например:

      СООБЩЕНИЕ диагноз, диагноз
                "Скорее всего имеет место ^!g (^!^)"
                
      Пусть для символьного атрибута "диагноз" выведено следующее:
               [диагноз.альвеолит] = 4.5;
               [диагноз.саркоидоз] = 1.0.
               
      Тогда на экран будет выдано сообщение:
               "Скорее всего имеет место альвеолит (4.5)".
       
}}
41{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ПЕРЕХОД 

       Действие   ПЕРЕХОД   позволяет   осуществлять  условный  переход  в
сценарии.  Параметром  действия  является  @имя@16@  предложения,  к   ко-
торому необходимо перейти.

       Пример предложения сценария:

      11  ПЕРЕХОД 18
      ЕСЛИ ~[метод_обезболивания.общее_обезболивание]

       При   выполнении  данного  предложения  будет  определено  значение
утверждения о возможности проведения  общего  обезболивания,  и  если  оно
окажется  отрицательным, будет сделан переход к предложению с именем 18 (в
примере имена предложений совпадают с их номерами, что необязательно).
}}
42{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  СБРОС 

       Действие СБРОС  предназначено  для  отмены  тех  значений,  которые
указаны  в  качестве параметров этого действия. Если параметры не указаны,
происходит отмена всех значений.

       Пример  фрагмента  сценария  (повторение  консультации   с   новыми
исходными данными):

      повторить  СБРОС
                 ЕСЛИ повторить_решение

      цикл       ПЕРЕХОД начало
                 ЕСЛИ -"-

       При  выполнении  предложения  "повторить"  будет  выведено значение
утверждения о необходимости повторить  решение  задачи  (для  рассмотрения
новой  ситуации). Если значение этого утверждения положительно, произойдет
отмена всех  значений,  полученных  во  время  консультации.  Затем  будет
выполняться предложение сценария с именем "начало".
}}
43{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  СБРОС_ВЫВОДА 

      Действие   СБРОС_ВЫВОДА   предназначено  для  отмены  всех
значений, кроме  тех,  которые  были  введены  пользователем  в  ответ  на
вопросы. Это действие не требует параметров.

      Пример фрагмента сценария (повторение консультации с изменением
 одного исходного данного):

      повторить СБРОС_ВЫВОДА
                ЕСЛИ повторить_решение

      отмена    СБРОС возраст
                ЕСЛИ -"-

      цикл      ПЕРЕХОД начало
                ЕСЛИ -"-

       В  том  случае,  когда  надо  повторить решение, будут отменены все
значения, за исключением исходных данных консультации,  а  также  значение
исходного  данного  "возраст",  после чего будет повторено решение задачи;
это  позволит  определить   влияние   возраста   пациента   на   результат
консультации.
}}
103{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ВЫХОД 

       Действие ВЫХОД предназначено для принудительного прекращения ведения
консультации. Если не задан параметр действия то после  выполнения  данного
предложения управление получит @меню команд@52@ Консультатора.  Если  пара-
метр задан (какое либо число) то произойдет выход из Консультатора.
}}
44{{
                        wr Действие  СТОП 

       Действие СТОП предназначено для принудительного прекращения решения
задачи.   В   качестве   параметров   действия   можно   задать   описание
заключительного сообщения. Параметры данного действия задаются так же, как
и в случае действия @СООБЩЕНИЕ@40@. Если параметры не заданы, заключитель-
ное сообщение не выдается. Решение задачи заканчивается также тогда, когда
достигнут конец сценария (нет следующего предложения).

      Пример предложения сценария:

                18 СТОП
                   ЕСЛИ ~повторить_решение
}}
45{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ПРИЕМ 

       Действие  ПРИЕМ  предназначено  для приема исходных данных из файла
входных данных, имя которого задается в качестве параметра действия.  Файл
входных  данных  может  быть  подготовлен  внешней программой или вручную.
Информация, содержащаяся в файле входных данных, представляет собой текст.
Каждая строка этого текста  задает  значение,  которое  следует  присвоить
некоторой цели.
       При выполнении данного действия каждой  цели,  указанной  в  строке
файла  входных  данных и к настоящему моменту не выведенной, присваивается
соответствующее значение. Если значение  выходит  за  пределы  допустимого
диапазона  для  данной  цели, оно игнорируется. Строки с неверно заданными
именами простых целей не обрабатываются.
       Если диапазон значений коэффициентов во внешнем файле отличается от
[-5.0, 5.0] (например,  используется  диапазон  [0.0,  1.0]  или  [-100.0,
100.0]), то при выполнении действия пропорциональное преобразование  коэф-
фициентов может осуществляться автоматически - для этого достаточно в  ка-
честве второго и третьего параметров этих действий указать нижнюю и  верх-
нюю границы диапазона, используемого во внешнем файле.

      Пример предложения сценария:

      6 ПРИЕМ "EXAMPLE.INP",-100, 100
        ЕСЛИ
        [метод_обезболивания.местная_анестезия]

      Пример файла входных данных EXAMPLE.INP:

        [анестетик.лидокаин]=100.00
        [анестетик.тримекаин]=-60.00
}}
46{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ВОЗВРАТ 

       Действие ВОЗВРАТ аналогично действию @РЕЗУЛЬТАТ@39@. Разница заклю-
чается лишь в том, что:
       1) результаты решения задачи выдаются не на экран дисплея, а в файл
выходных данных, имя которого задается в параметрах действия;
       2) вместо развернутых имен целей всегда используются имена целей;
       3) если диапазон значений коэффициентов во внешнем файле отличает-
ся от [-5.0, 5.0] (например, используется диапазон [0.0, 1.0] или
[-100.0, 100.0]), то при выполнении действия пропорциональное преобразо-
вание коэффициентов может осуществляться автоматически - для этого доста-
точно в качестве второго и третьего параметров этих действий указать ниж-
нюю и верхнюю границы диапазона, используемого во внешнем файле.
       Файл выходных данных имеет формат,  полностью  аналогичный  формату
файла входных данных.

      Пример предложения сценария:

      10 ВОЗВРАТ "RES.OUT",-100, 100, 0, процент_риска

}}
47{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ВЫПОЛНИТЬ 

      Действие ВЫПОЛНИТЬ предназначено для выполнения команды операци-
онной системы. Шаблон используется так же, как и в действии @СООБЩЕНИЕ@40@.

      Пример предложения сценария:

      1 ВЫПОЛНИТЬ "dir /p"
        ЕСЛИ
}}
48{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ЗАДАЧА 

       Действие  ЗАДАЧА  описывает  обращение  одной  модели  к другой для
решения некоторой частной задачи,  как  это  имеет  место  в  традиционном
программировании  при  вызове  подпрограммы. Первый параметр указывает имя
вызываемой модели (к началу консультации эта  модель  должна  находится  в
Базе   знаний).  Далее  перечисляются  простые  цели,  с  помощью  которых
происходит  обмен  данными  между  вызывающей   и   вызываемой   моделями.
Параметрами  могут  быть  простые  цели  и  числовые константы. При вызове
модели  происходит  передача  не  только  значений,  но  и  имен  (включая
развернутые)  простых  целей, являющихся параметрами действия ЗАДАЧА. Если
простая цель является числовым атрибутом, в вызываемую  модель  передается
также  значение  по  умолчанию и диапазон возможных значений. Если простая
цель является утверждением, будут переданы имена (@простое@16@  и
@развернутое@17@) соответствующего символьного атрибута, а также
@шаблон утверждения@20@.
       Если  значение  переданной  в модель цели не было известно в момент
обращения, но оказалось вычисленным к  моменту  возвращения  в  вызывающую
модель,  результат  вычисления будет передан в вызывающую модель. Значения
целей, вычисленных к моменту обращения, не могут быть изменены в вызванной
модели.

      Пример фрагмента сценария с вызовом моделей:

  1 ЦЕЛЬ   стаж_1, возраст_1, стаж_2, возраст_2
  2 ЗАДАЧА "TEST", оценка_кандидата_1, стаж_1, возраст_1
  3 ЗАДАЧА "TEST", оценка_кандидата_2, стаж_2, возраст_2

       В данном примере предполагается, что необходимо  сделать  выбор  из
двух  кандидатов  (например, на какую-либо должность) на основании оценок,
получаемых ими при прохождении некоторого стандартного теста. Тест  описан
в  модели  TEST  и  использует  данные  о  стаже и возрасте кандидата. При
выполнении предложений сценария с именами 2 и 3 будет вызвана модель  TEST
и  переданы  данные о стаже и возрасте. Результатами тестирования являются
оценки кандидатов, вычисляемые в этой модели.
}}
49{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  АРГУМЕНТЫ 

     Действие АРГУМЕНТЫ предназначено  для  описания  тех  простых  целей,
которые данная модель принимает при ее вызове из другой модели (см.
@ЗАДАЧА@48@). Оно должно быть  первым   в  сценарии.  При  вызове  модели
перечисленные в действии АРГУМЕНТЫ простые цели заменяются целями из  вы-
зывающей  модели.
     Если в подмодель передавалось число, то  передается  только  значение
подцели, а имя ее не изменяется.  Имена  простых  целей  в подмодели  дол-
жны  быть  не короче имен соответствующих целей в вызывающей модели.

     Пример фрагмента сценария модели TEST:

     1 АРГУМЕНТЫ оценка_кандидата, стаж__, возраст__
     2 ЦЕЛЬ оценка_кандидата__

       Выполняя данное действие,  подмодель  заменит  имена  перечисленных
простых   целей   на  имена  переданных  из  модели  параметров  и  примет
вычисленные в вызывающей модели значения  числовых  атрибутов  "стаж__"  и
"возраст__".
}}
50{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  ЗАГРУЗИТЬ_ТОЧКУ 

       Параметр действия ЗАГРУЗИТЬ_ТОЧКУ определяется  следующим образом:

      <параметр действия ЗАГРУЗИТЬ_ТОЧКУ> ::= [<имя файла>]

       Текст указывает имя контрольной точки;  если  текст  опущен,  будет
загружаться точка с именем текущей модели и расширением ".PNT". Выполнение
данного  предложения  приводит  к  загрузке из внешнего файла информации о
значениях простых целей в модели. Внешний файл может быть либо  получен  в
результате  выполнения  действия  @СДЕЛАТЬ_ТОЧКУ@51@ (при этом он доступен
для последующей корректировки пользователем), либо создан вручную. Поэтому
все загруженные значения рассматриваются в ходе решения задачи как получен-
ные от пользователя.
}}
51{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  СДЕЛАТЬ_ТОЧКУ 

       Параметр действия СДЕЛАТЬ_ТОЧКУ определяется следующим образом:

      <параметр действия СДЕЛАТЬ_ТОЧКУ> ::= [<имя файла>]

       Текст   указывает   имя   файла,  в  котором  должна  быть  создана
контрольная точка. Если текст опущен, в  качестве  имени  принимается  имя
текущей  модели  с  расширением  ".PNT".  При  создании  контрольной точки
происходит запоминание во внешнем файле всех выведенных к текущему моменту
значений,  включая  значения  в  моделях,  вызвавших  данную,  если  такие
имеются. Таким образом, в отличие от действия ВОЗВРАТ, удается передать во
внешний файл значения из всех выполняемых моделей.
       Внешний   файл   представляет   собой   последовательность   строк,
описывающих выполняемые модели. Модели описываются в  порядке  их  вызова:
сначала  - исходная модель, далее - модель, вызванная из исходной, и т.д.,
до  текущей  модели.  Описание  каждой  модели  начинается  с   заголовка,
состоящего из двух строк:

      <первая строка заголовка> ::= '>'<имя модели>
      <вторая строка заголовка> ::= ПРЕДЛОЖЕНИЕ = <номер>

 где номер указывает, какое по порядку (начиная с первого) предложение
 сценария выполняется в модели в момент создания контрольной точки.
       Остальные   строки   содержат   описания  данных,  и  их  структура
определяется следующим образом:

      <строка описания данных> ::=     <имя простой цели>=<значение>
      <значение> ::= <число>
}}
52{{
                                       @ОГЛАВЛЕНИЕ@99@

                  wr МЕНЮ КОМАНД КОНСУЛЬТАТОРА 

      Меню команд консультатора позволяет:
      войти в консультацию                       @КОНСУЛЬТАЦИЯ@53@
      выполнить сброс полученных результатов     @СБРОС@54@
      установить режим трассировки               @ТРАССА@55@
      определить устройство для вывода протокола @ПРОТОКОЛ@56@
      выполнить операции с контрольной точкой    @КОНТР.ТОЧКА@57@
      просмотреть состояние загруженных моделей  @ПРОСМОТР@58@
      закончить работу                           @ВЫХОД@59@
}}
53{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Команда  КОНСУЛЬТАЦИЯ 

       Команда  КОНСУЛЬТАЦИЯ @меню команд Консультатора@52@ позволяет
начать  консультацию, или, если имеется прерванная консультация, про-
должить ее.
}}
54{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Команда  СБРОС 

       Команда  СБРОС @меню команд Консультатора@52@ позволяет   выполнить
один из двух возможных режимов сброса в соответствии со значением аргумента.
Возможен сброс либо всех значений, либо только выведенных значений  (исклю-
чая те, которые получены при помощи ответов на вопросы, либо явно заданы по-
льзователем  при просмотре целей).
}}
55{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Команда  ТРАССА 

       Команда  ТРАССА @меню команд Консультатора@52@ позволяет в зависи-
мости от значения аргумента включить, или выключить трассировку работы ре-
шателя.
}}
56{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Команда  ПРОТОКОЛ 

       Команда  ПРОТОКОЛ @меню команд Консультатора@52@ позволяет опреде-
лить устройство для вывода протокола  (файл,устройство  печати). В прото-
кол заносятся все диалоги, выполняемые в окнах @КОНСУЛЬТАЦИЯ@67@,@ТРАССА@66@,
@ОБЪЯСНЕНИЕ@65@. Для удобства анализа протокола сообщения трассировщика от-
мечаются в протоколе символом  "!", а тексты объяснений - символом "?". Для
отключения записи в протокол следует указать устройство с "пустым" именем,
т.е. именем, не содержащим символов.
       В начале работы запись в протокол всегда отключена.
}}
57{{
                                       @ОГЛАВЛЕНИЕ@99@

                     wr Команда  КОНТРОЛЬНАЯ  ТОЧКА 

       Команда КОНТР.ТОЧКА @меню команд Консультатора@52@ позволяет  либо
сохранить состояние консультации в некоторый момент времени в виде так на-
зываемой контрольной точки, либо продолжить консультацию с указанного ме-
ста путем загрузки соответствующей контрольной  точки. Для одной ЭС может
быть создано несколько контрольных точек. При создании контрольной  точки
пользователь  должен  указать  имя файла,  в  котором будет храниться вся
необходимая информация. При  загрузке  контрольной  точки требуется также
указать имя соответствующего файла.
}}
59{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr Команда  ВЫХОД 

      После  выдачи  команды ВЫХОД @меню команд Консультатора@52@ Загруз-
чик вновь передаст управление Редактору.
}}
58{{
                                       @ОГЛАВЛЕНИЕ@99@

                          wr Команда  ПРОСМОТР 

      После  команды  ПРОСМОТР @меню команд Консультатора@52@ можно перейти
к просмотру:
состояния целей      @ЦЕЛИ@60@
правил               @ПРАВИЛА@61@
предложений сценария @СЦЕНАРИЙ@63@
моделей              @МОДЕЛИ@64@
}}
60{{
                                       @ОГЛАВЛЕНИЕ@99@

                         @Просмотр@58@ wr Целей 

      В окне ЦЕЛИ в виде таблицы отображает текущее состояние всех це-
лей активной модели текущее состояние всех целей активной модели.
Информация  о  каждой  цели  помещается  в  одной  строке.  Таблица  имеет
следующие столбцы:

      ИМЯ ЦЕЛИ - содержит имя цели;
      ТИП      - содержит тип цели (утверждение или числовой атрибут);
      ЗНАЧЕНИЕ - содержит значение цели (если оно есть);
      КАК?     - идентифицирует источник значения цели (если оно есть)
                 или состояние цели (активна, не выводилась, не вы-
                 ведена по вопросу, не вывелась).

       При работе с окном ЦЕЛИ, пользователь может осуществить:
      перемещение курсора по строкам таблицы;
      модификацию значений целей;
      доступ к информации об источнике значения (КАК ?);
      вызов средств графического объяснения;
      возврат в меню команд.
       Перемещение  курсора  по  списку целей выполняется обычным образом,
т.е. при помощи клавишей СТРЕЛКА ВВЕРХ и СТРЕЛКА ВНИЗ.  При  этом  в  окне
КОММЕНТАРИЙ  синхронно отображается текст развернутого имени текущей цели.
Может использоваться также механизм инкрементного поиска.
       Если пользователь хочет модифицировать  значение  цели,  он  должен
воспользоваться  клавишем  Grey  +  .  При  этом в поле сообщений появится
информация о диапазоне возможных значений цели и  значении  по  умолчанию.
Затем  пользователь может ввести требуемое значение и нажать Enter или при
помощи клавиша Esc отказаться от модификации.
       Эта возможность позволяет экспериментировать  с  моделью  следующим
образом.  После  того, как получено решение некоторой задачи, пользователь
может войти в таблицу целей и изменить ответ на  некоторый  вопрос  (путем
корректировки связанных с ним целей). Затем выполнить сброс вывода и вновь
начать  консультацию  (при  этом  все  его  ответы  на  остальные  вопросы
сохраняются). В  результате  пользователь  получает  возможность  получить
ответ на вопрос: "ЧТО изменится ЕСЛИ по другому ответить на вопрос?".
       Возможным  источником  значения  (поле  КАК?)  может  быть правило,
предложение  сценария,  пользователь.  Кроме  того,  значение  может  быть
получено  по  умолчанию  как  побочный  результат  применения байесовского
правила, подцелью которого является данная цель.
       В  первых  двух  случаях  пользователь  может  получить  доступ   к
информации  об  источнике значения при помощи клавиша Enter.
       При помощи клавиша F2  может  быть  вызвано  средство  графического
объяснения, позволяющее получить графическое изображение активной модели с
использованием  различных цветов для индикации текущего состояния процесса
вывода. Детальное описание  средств,  реализующих  графическое  объяснение
содержится  в  документе  "Комплекс  программ  ЭКО.  Средство анализа Базы
знаний XHT. Руководство программиста ".
       Возврат в меню команд из окна ЦЕЛИ происходит путем нажатия клавиша
Esc.
}}
61{{
                                       @ОГЛАВЛЕНИЕ@99@

                         @Просмотр@58@ wr Правил 

       После выдачи команды просмотра правил на экране   появляется   окно
ПРАВИЛА. Это окно обеспечивает отображение списка  имен правил и позволяет
выполнить следующие действия:
      перемещение курсора по списку правил;
      отображение списка подцелей правила;
      инкрементный поиск правила;
      вызов средств графического объяснения;
      возврат в меню команд.
       Перемещение курсора по списку целей  выполняется  обычным  образом,
т.е.  при  помощи  клавишей  СТРЕЛКА ВВЕРХ и СТРЕЛКА ВНИЗ. При этом в окне
КОММЕНТАРИЙ синхронно отображается текст комментария к правилам.
       Выбор правила в списке, осуществляемый по  нажатию  клавиша  Enter,
приводит  к  возникновению  окна  @ПОДЦЕЛИ@62@ и передаче туда управления.
       Вызов  средств  графического  объяснения  аналогичен  описанному  в
просмотре @ЦЕЛИ@60@.
}}
62{{
                                       @ОГЛАВЛЕНИЕ@99@

                    @Просмотр@58@ wr Подцелей Правил 

       Окно ПОДЦЕЛИ отображает список подцелей правила, которые  можно про-
сматривать обычным  образом. Кроме того, при помощи клавиша Enter для любой
подцели можно осуществить переход в окно @ЦЕЛИ@60@. Курсор при этом автома-
тически установится на соответствующую строку.
}}
63{{
                                       @ОГЛАВЛЕНИЕ@99@

                  @Просмотр@58@ wr Предложений Сценария 

       Просмотр предложений сценария полностью аналогичен просмотру
 @ПРАВИЛ@61@
}}
64{{
                                       @ОГЛАВЛЕНИЕ@99@

                         @Просмотр@58@ wr Моделей 

       После выдачи команды просмотра загруженных моделей управление пере-
дается в окно МОДЕЛИ. Это окно обеспечивает отображение списка имен загру-
женных моделей и позволяет выполнить следующие действия:
      перемещение курсора по списку моделей;
      активизация модели;
      инкрементный поиск имени модели;
      возврат в меню команд.

       Перемещение курсора  по списку моделей выполняется обычным образом,
т.е. при помощи клавишей СТРЕЛКА ВВЕРХ и СТРЕЛКА ВНИЗ.  При  этом  в  окне
КОММЕНТАРИЙ синхронно отображается текст комментария к моделям.
       Активизация  модели осуществляется при помощи клавиша Enter. Данная
возможность  позволяет  анализировать  и  модифицировать  состояние  любой
модели, загруженной в данный момент в оперативную память. Заметим, что при
входе   в   консультацию,   активной  автоматически  становится  последняя
загруженная модель.
}}
65{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой
                          
                              wr ОБЪЯСНЕНИЕ 

       Консультатор  обеспечивает  объяснения  в  виде  ответов на  вопрос
типа ЗАЧЕМ задан вопрос.
       Информация о причине, по которой задается  вопрос,  предоставляется
пользователю в поддиалоге, выполняемом через окно ОБЪЯСНЕНИЕ. Для перехода
в  это  окно  пользователь  должен  в  тот  момент, когда ему предлагается
ответить на некоторый вопрос, выдать команду ЗАЧЕМ?.
       В ответ система выдает объясняющее сообщение следующего вида:

      ВЫВОДИТСЯ ЦЕЛЬ '<ИМЯ>', ЗНАЧЕНИЕ КОТОРОЙ БУДЕТ ИСПОЛЬЗОВАНО
      ПРАВИЛОМ <ИМЯ ПРАВИЛА>
      ПРАВИЛО <ИМЯ ПРАВИЛА> ПРИМЕНЯЕТСЯ ДЛЯ ВЫЧИСЛЕНИЯ ЦЕЛИ '<ИМЯ>'
      <КОММЕНТАРИЙ К ПРАВИЛУ>

       В качестве имени выводится: заполненный  шаблон  утверждения,  если
целью  является  утверждение,  или  развернутое  имя  атрибута, если целью
является числовой атрибут.
       Если пользователь запрашивает дальнейшие  объяснения  (клавиш  F5),
система снова выдает объясняющее сообщение указанного вида. Так происходит
до  тех  пор,  пока  процесс объяснений не достигает исходной цели. В этом
случае выдается сообщение вида:

      ЦЕЛЬ  '<ИМЯ>' ЯВЛЯЕТСЯ ИСХОДНОЙ (МОДЕЛЬ <ИМЯ МОДЕЛИ>)

       Если  упоминаемая  в   сообщении   модель   является   единственной
загруженной  в  данный  момент  моделью,  то  объяснение  заканчивается, и
система повторяет свой  вопрос.  В  противном  случае  пользователь  может
запросить дальнейшие объяснения, при этом будут выдаваться сообщения вида:

      МОДЕЛЬ <ИМЯ МОДЕЛИ 1> ВЫЗВАНА ИЗ МОДЕЛИ <ИМЯ МОДЕЛИ 2>
      <КОММЕНТАРИЙ К ПРЕДЛОЖЕНИЮ СЦЕНАРИЯ МОДЕЛИ 2>

       Таким  образом  описывается  порядок  вызова  подмоделей,  причем в
качестве  пояснений  выдаются  тексты  комментариев  к  тем   предложениям
сценария, из которых осуществляется вызов.
      Пример:

      КАКАЯ ПОГОДА ?
    =>ЗАЧЕМ ?
      ВЫЧИСЛЯЕТСЯ ЦЕЛЬ 'ПОГОДА ХОРОШАЯ',
      ЗНАЧЕНИЕ КОТОРОЙ БУДЕТ ИСПОЛЬЗОВАНО ПРАВИЛОМ L1
      ПРАВИЛО L1 ПРИМЕНЯЕТСЯ ДЛЯ ВЫЧИСЛЕНИЯ ЦЕЛИ
      'ОТДЫХ ЗА ГОРОДОМ'
       В  случае  хорошей  погоды  целесообразно  провести выходные дни на
свежем воздухе, за городом
    =>ЗАЧЕМ ?
      ЦЕЛЬ 'ОТДЫХ ЗА ГОРОДОМ' ЯВЛЯЕТСЯ ИСХОДНОЙ (модель WEEK_END)
    =>ЗАЧЕМ ?
      МОДЕЛЬ WEEK_END ВЫЗВАНА ИЗ МОДЕЛИ HEALTH
       Правильная организация еженедельного  отдыха  является  необходимым
условием поддержания хорошего состояния здоровья

       Весь   ход   поддиалога  объяснения  может  быть  сделан  доступным
пользователю в режиме просмотра. Переход в этот режим,  выход  из  него  и
работа  в  режиме  просмотра  выполняются аналогично режиму просмотра хода
консультации
       В любой момент пользователь может  закончить  поддиалог  объяснения
при помощи клавиша Esc.
}}
66{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                               wr ТРАССА 

       Решение задачи с использованием трассировки применяется для отладки
модели, выполняемой инженером по знаниям. Трассировка также может потребо-
ваться пользователю  в  процессе  консультации  для  уяснения хода решения
задачи.  При  решении  задачи  с  использованием трассировки на экране по-
является  окно  ТРАССА,  куда  выводятся  сообщения трассировщика , отсле-
живающего ход решения.
       Трассировщик формирует сообщения четырех типов:
         относящиеся к выполнению подмоделей;
         относящиеся к выполнению предложений сценария;
         относящиеся к рассмотрению целей;
         относящиеся к применению правил вывода.
       Сообщения,  относящиеся  к  выполнению  подмоделей,  имеют  форматы
следующих типов:

         1) *************** ВХОД В ПОДМОДЕЛЬ <ИМЯ МОДЕЛИ>

         2) *************** ЗАВЕРШЕНИЕ ПОДМОДЕЛИ <ИМЯ МОДЕЛИ>
            (<СООБЩЕНИЕ О СПОСОБЕ ЗАВЕРШЕНИЯ>)

       Сообщение первого типа выдается в тех случаях, когда в соответствии
со сценарием текущей модели Консультатор загружает некоторую  подмодель  и
переходит к ее выполнению.
       Сообщение   второго   типа   выдается   тогда,   когда   выполнение
подгруженной  модели  закончено  и  Консультатор  возвращается  к  текущей
модели.  Если  модель  была  успешно  загружена  и выполнена, трассировщик
выдаст сообщение "НОРМАЛЬНОЕ ЗАВЕРШЕНИЕ". Если модель не удалось загрузить
(недостаточный объем доступной оперативной памяти, ошибка ввода-вывода при
обращении к диску) или выполнить (модель  не  тестирована),  будет  выдано
соответствующее сообщение о неудачном завершении.
       Сообщения,  относящиеся  к  выполнению предложений, имеют следующий
формат:

         1) ВЫПОЛНЯЕТСЯ ПРЕДЛОЖЕНИЕ <НОМЕР  ПРЕДЛОЖЕНИЯ> СЦЕНАРИЯ
            <КОММЕНТАРИЙ К ПРЕДЛОЖЕНИЮ>

         2) УСЛОВИЕ ДЛЯ ПРЕДЛОЖЕНИЯ  <НОМЕР  ПРЕДЛОЖЕНИЯ>:
            <ЗНАЧЕНИЕ ИСТИННОСТИ УСЛОВИЯ ПРИМЕНИМОСТИ>

       Эти сообщения появляются каждый раз, когда Консультатор переходит к
рассмотрению очередного предложения сценария.
       В случае, когда Консультатор приступает  к  рассмотрению  некоторой
цели, в трассу поступает сообщение вида:

      ВЫСТАВЛЕНА ЦЕЛЬ '<ЗАПОЛНЕННЫЙ ШАБЛОН УТВЕРЖДЕНИЯ>'
      ЦЕЛЬ '<ЗАПОЛНЕННЫЙ ШАБЛОН УТВЕРЖДЕНИЯ>' РАВНА
      <КОЭФФИЦИЕНТ ОПРЕДЕЛЕННОСТИ УТВЕРЖДЕНИЯ>

      если текущей целью является утверждение, или

      ВЫСТАВЛЕНА ЦЕЛЬ '<РАЗВЕРНУТОЕ ИМЯ АТРИБУТА>'

      ЦЕЛЬ '<РАЗВЕРНУТОЕ ИМЯ АТРИБУТА>' РАВНА <ЧИСЛОВОЕ ЗНАЧЕНИЕ>

      если текущей целью является числовой атрибут.

       В  случае,  когда Консультатор приступает к рассмотрению некоторого
правила, формируется сообщение вида:

      РАССМАТРИВАЕТСЯ ПРАВИЛО <ИМЯ ПРАВИЛА> <КОММЕНТАРИЙ>

       В  случае,  когда  Консультатор  в  состоянии   вычислить   условия
применимости правила, формируется сообщение вида:

      УСЛОВИЕ ПРИМЕНИМОСТИ ПРАВИЛА <ИМЯ ПРАВИЛА> :
      <ЗНАЧЕНИЕ ИСТИННОСТИ УСЛОВИЯ ПРИМЕНИМОСТИ>

       Сообщение,   информирующее  пользователя  о  результате  выполнения
правила, имеет вид:

      РЕЗУЛЬТАТ ВЫПОЛНЕНИЯ ДЕЙСТВИЯ ДЛЯ ПРАВИЛА <ИМЯ ПРАВИЛА> :
      <ЧИСЛОВОЕ ЗНАЧЕНИЕ>

       Если целью правила является некоторое  утверждение,  то  сообщаемое
числовое    значение    представляет    собой    вычисленный   коэффициент
определенности этого утверждения. Если  целью  правила  является  числовой
атрибут, то в сообщении указывается найденное значение этого атрибута.
}}
67{{
                                       @ОГЛАВЛЕНИЕ@99@

                   wr Диалог Пользователя с Системой 

      В  режиме  решения  задачи  система  ведет  с  пользователем
диалог,  в  процессе которого она пытается получить значения коэффициентов
определенности для утверждений и значений для числовых атрибутов,  которые
потребуются  для  получения  решения.  При  этом  система  может  выдавать
сообщения,  определяемые  сценарием  консультации,  и  задавать  три  типа
вопросов:
      @простой вопрос@68@
      @сложный альтернативный вопрос@69@
      @сложный дистрибутивный вопрос@70@
       Для  того,  чтобы  помочь  пользователю  определить тип задаваемого
вопроса, в поле сообщений выводится соответствующее сообщение.
       Для упрощения ответов на простой и  сложный  дистрибутивный  вопрос
могут быть использованы лингвистические @шкалы@18@, позволяющие давать от-
вет не в числовом, а в символьном виде.
       Кроме  того,  вопросы  могут  задаваться  в  графическом  виде (см.
"Комплекс программ ЭКО. Стандартные интерфейсы. Руководство программиста").
       Пользователь, поддерживающий диалог с  системой  в  режиме  решения
задачи, вместо ответа на вопрос может:
       запросить технологическую помощь (F1);
       ответить @НЕ ЗНАЮ@71@ (F2);
       потребовать повторить последний вопрос (F3);
       передать управление @меню команд@52@ (F4);
       спросить, @ЗАЧЕМ@65@ задан вопрос (F5);
       перейти в режим @просмотра@72@ (F6);
       запросить @функциональную помощь@73@ (F10);
       завершить консультацию (Esc).
}}
68{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                           wr ПРОСТОЙ ВОПРОС 

       Простой вопрос задается для получения значения  числового  атрибута
или утверждения.
       Для  утверждения  введенное  число  интерпретируется  как  значение
коэффициента определенности. Напомним, что коэффициент определенности  это
вещественное число в диапазоне от минус 5.0 до плюс 5.0.
       Кроме того, при задании вопроса может быть использована лингвисти-
ческая @шкала@18@.
}}
69{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                      wr СЛОЖНЫЙ АЛЬТЕРНАТИВНЫЙ ВОПРОС 

       Сложные  вопросы задаются для получения распределения коэффициентов
определенности  значений  символьного  атрибута.   Альтернативный   вопрос
используется  для  таких  символьных  атрибутов, которые могут принимать в
текущей ситуации  только  одно  из  множества  своих  возможных  значений.
Например,   символьный   атрибут   "пол",  имеющий  значения  "мужской"  и
"женский". Для символьных атрибутов, которые  могут  принимать  в  текущей
ситуации  одновременно  несколько  значений,  используются  дистрибутивные
вопросы.  Например,  атрибут  "знание_языков"  может  одновременно   иметь
значения:   "русский"   (с   определенностью   5.0)   и   "английский"  (с
определенностью 3.0).
       Здесь  перечислены  все  возможные  значения  символьного атрибута.
Каждое значение представлено развернутым именем (если оно есть) или  своим
именем.
       Задача  пользователя - выбрать одно из значений (при помощи клавиша
Enter).
       В результате  утверждению,  соответствующему  выбранному  значению,
присваивается значение плюс 5.0, а всем остальным - значение минус 5.0.
}}
70{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                    wr СЛОЖНЫЙ ДИСТРИБУТИВНЫЙ ВОПРОС 

       Сложный   дистрибутивный   вопрос   также  содержит  перечень  всех
возможных значений  символьного  атрибута  (для  которых  еще  не  выведен
коэффициент  определенности),  однако в поле сообщений высвечивается текст
"Введите распределение коэффициентов определенности".
       При  помощи   бокса,   содержащего   развернутые   имена   значений
соответствующего символьного атрибута, пользователь указывает коэффициенты
определенности для нужных значений.
       Для ввода коэффициента определенности значения символьного атрибута
необходимо:
      нажать клавиш Grey +;
      ввести число в диапазоне от минус 5.00 до плюс 5.00;
      нажать клавиш Enter.
       После  того  как  пользователь ввел коэффициенты определенности для
всех нужных значений символьного атрибута, ему  необходимо  нажать  клавиш
Enter.
       Коэффициенты  определенности  для  неуказанных  значений  считаются
по-прежнему неизвестными и могут в дальнейшем выводиться  любым  возможным
способом,  кроме  задания  вопроса.                                                   │
}}
71{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                                wr НЕ ЗНАЮ 

       Если  пользователь  отвечает НЕ ЗНАЮ, соответствующая цель получает
специальное значение в соответствии с таблицей.  Решатель  в  этом  случае
будет пытаться вывести значение этой цели другим способом.

                                           Таблица

                     Специальные значения целей

 ┌──────────────────────────┬───────────────────────────────────┐
 │       Значение цели      │     Способ   интерпретации        │
 ├──────────────────────────┼───────────────────────────────────┤
 │                          │                                   │
 │       64001              │  Значение цели еще не выводилось  │
 │       64002              │  Значение цели не удалось вывести │
 │       64003              │  Значение цели не удалось вывести │
 │                          │  путем задания вопроса            │
 └──────────────────────────┴───────────────────────────────────┘
}}
72{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                        wr ПРОСМОТР ХОДА КОНСУЛЬТАЦИИ 

       Для  восстановления  хода  консультации   пользователю   необходимо
перейти  в  режим просмотра. Просмотр хода консультации осуществляется при
помощи клавишей СТРЕЛКА ВВЕРХ, СТРЕЛКА ВНИЗ, PgUp,  PgDn.  Кроме  того,  в
этом  режиме пользователь может при помощи клавиша Tab передать управление
окну @ТРАССА@66@ (если режим трассировки  установлен)  и  осуществить про-
смотр трассы, используя те же клавиши. Возврат из окна ТРАССА производится
нажатием клавиша Tab. Описание средств трассировки содержится в п.  3.4.4.
Для  того,  чтобы  продолжить  нормальный  ход  консультации, пользователь
должен выйти из режима просмотра, используя клавиш F6.
}}
73{{
                                       @ОГЛАВЛЕНИЕ@99@

                                       @Диалог@67@wr Пользователя с Системой

                         wr ФУНКЦИОНАЛЬНАЯ ПОМОЩЬ 

       Функциональная  помощь  предназначена  для  того,  чтобы  в  случае
необходимости   помочь  пользователю  в  работе  с  конкретной  экспертной
системой и требует разработки специальных средств. Консультатор  реализует
следующий интерфейс со средствами функциональной помощи:
       по  нажатию  клавиша  F10  вызывается программа с именем EHELP.EXE,
которая может находится либо в текущем директории, либо в директории, куда
установлен путь;
       контекст  вызова   определяется   параметром,   передаваемым   этой
программе;
       параметр представляет собой имя утверждения или числового атрибута,
на которое указывает курсор в момент запроса функциональной помощи.
       В   составе   стандартных  интерфейсов  имеются  средства  создания
функциональной помощи в графическом  виде  (см.  "Комплекс  программ  ЭКО.
Стандартные интерфейсы. Руководство программиста" Раздел 5).
}}
200{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  СДЕЛАТЬ_ТОЧКУ_ВЫХОД 

      Данное предложение аналогично предложению @СДЕЛАТЬ_ТОЧКУ@51@ и отли-
чается от него только тем, что после создания контрольной точки следует
немедленное завершение консультации. Это удобно использовать для описания
прерывания консультации (и сохранения всех выведенных результатов) с
возможностью возобновления решения задачи с момента прерывания.
                                      
      Пример.
      
                1 ЗАГРУЗИТЬ_ТОЧКУ
                  ЕСЛИ продолжить_решение
                  
                2 ЦЕЛЬ симптомы,рекомендации
                
                3 СООБЩЕНИЕ
                 " Для продолжения консультации необходимо проведение
                   следующих лабораторных исследований :"
                   
                4 РЕЗУЛЬТАТ "^v",0,рекомендации
                
                5 СДЕЛАТЬ_ТОЧКУ_ВЫХОД
                  ЕСЛИ нет_исследований
                
                6 РЕЗУЛЬТАТ -5,диагноз
                
       В данном примере перед началом решения задачи выясняется, является
ли данная консультация продолжением прерванной ранее. Если нет, то решение
задачи начинается сначала. Когда система выясняет, какие лабораторные иссле-
дования должны быть сделаны для продолжения решения, она сообщает о них
пользователю. Если результаты исследований уже имеются, решение может быть
продолжено; иначе происходит прерывание консультации с запоминанием всех
промежуточных данных. После получения результатов исследований консультация
может быть продолжена с момента прерывания.
}}
201{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие  НАСТРОЙКА 

      С помощью этого действия разработчик ЭС может задавать реакцию Кон-
сультатора на клавиши F9 и F10 в ходе решения задачи.
      Параметры действия НАСТРОЙКА аналогичны параметрам действия
@СООБЩЕНИЕ@40@. В шаблоне сообщения указывается, какая команда DOS должна
быть выполнена в том случае, когда пользователь, вместо ответа на вопрос,
нажмет клавишу F9 или F10. Описание реакции на каждую клавишу начинается
в шаблоне сообщения с первой позиции строки и имеет вид:
         F<номер клавиши>: <шаблон команды DOS>
где номер клавиши - число 9 или 10, а шаблон команды содержит не более
160 символов. Для обозначения имени активной цели (т.е. той, к которой
задается вопрос) используются символы "^x".
     По умолчанию клавиша F9 не используется, а по клавише F10 выполня-
ется команда DOS: EHELP ^x exp_lst.pic.
     Настройка клавиш осуществляется при каждом выполнении действия
НАСТРОЙКА. При выполнении общего сброса или сброса выведенных результа-
тов отменяется текущая настройка клавиш и принимается настройка по
умолчанию.
     Данное действие удобно использовать для описания контекстно-зависи-
мой помощи в ходе консультации. По одной из клавиш можно получать, напри-
мер, помощь для начинающего пользователя ЭС, а по другой - сжатую спра-
вочную информацию для специалиста.

         Пример.
        
       1 АРГУМЕНТЫ  индекс_объекта, состояние
       2 НАСТРОЙКА
         "F9:  ehelp ^x obj_^v.pic
          F10: ht hlp.txt",индекс_объекта
                         
     В примере приведены первые предложения подзадачи, посвященной ана-
лизу состояния некоторого типового объекта, индекс которого передается
в подзадачу в качестве параметра. К каждому конкретному объекту O1, O2 и
т.д. имеется графическая помощь, описание которой содержится в файлах
OBJ_O1.PIC, OBJ_O2.PIC и т.д. Общая помощь по системе имеет вид гипер-
текста с именем HLP.TXT. После выполнения настройки пользователь полу-
чает возможность:
     по клавише F9 - получать графическую помощь, относящуюся к рас-
сматриваемому конкретному объекту;
     по клавише F10 - получать общую помощь по системе.
}}
202{{
                                       @ОГЛАВЛЕНИЕ@99@

                        wr Действие ПЕРВЫЙ_РЕЗУЛЬТАТ 

       Действие ПЕРВЫЙ_РЕЗУЛЬТАТ задает список целей, из которых необходи-
мо найти хотя бы одно утверждение с коэффициентом определенности не ниже
уровня выдачи результатов, и выдать сообщение об этом утверждении. В ходе
выполнения действия цели рассматриваются по порядку; как только удается
получить искомое утверждение, рассмотрение заканчиваются. Сообщение со-
держит развернутое имя утверждения и его значение.
       Сообщение о результате может выдаваться по шаблону выдачи, задавае-
мому в качестве первого (необязательного) параметра. Если шаблон выдачи
не указан, используется стандартный:  wb^g: ^^ .

       Пример предложения сценария:
       
   1  РЕЗУЛЬТАТ 3, анестетик
   "Выбор средства обезболивания"

       При выполнении этого действия будут вычисляться значения символьного
атрибута  "анестетик"  (предложение  является  первым  в сценарии, поэтому
никакие значения еще не выведены), а затем на экран будет выдано сообщение
о первом из значений атрибута "анестетик", коэффициент определенности кото-
рого не ниже 3.00. При выдаче будет использован стандартный шаблон. Например,
если выведено:

      [анестетик.новокаин]  = -5.00,
      [анестетик.тримекаин] =  5.00,

и шаблон утверждений для символьного атрибута "анестетик" имеет вид
"рекомендуемый анестетик - ^v", причем развернутые имена значений атрибута
в модели не указаны, то на экран будет выведено следующее:

      рекомендуемый анестетик - тримекаин: 5.00
      
      Это же предложение можно задать с шаблоном выдачи:
      
   1  РЕЗУЛЬТАТ "с определенностью ^^ рекомендуется: ^v", -3, анестетик
   "Выбор средства обезболивания"
   
      В этом случае на экран выведется:
                                       
       с определенностью 5.00 рекомендуется: тримекаин
     
     В отличие от действия @РЕЗУЛЬТАТ@39@, данное действие позволяет
подавить вывод всех возможных результатов в том случае, когда прием-
лемое решение уже получено.
}}
203{{
                                       @ОГЛАВЛЕНИЕ@99@

                 wr Действие  СБРОС_КРОМЕ 

       Действие СБРОС_КРОМЕ предназначено для отмены всех значений, кроме
тех, которые указаны в качестве параметров этого действия. Если параметры 
не указаны, никаких действий не производится.
}}
204{{
                                       @ОГЛАВЛЕНИЕ@99@

                 wr КОМАНДЫ  РЕДАКТИРОВАНИЯ 

       Ниже описываются команды, используемые при редактированиии инфор-
мации, находящейся в окнах КОММЕНТАРИЙ, ШАБЛОН УТВЕРЖДЕНИЯ, ЕСЛИ, ТО  и
СООБЩЕНИЕ.

  wr ASCII клавиш           - ввести символ
  wr Del                    - удалить символ над курсором
  wr Enter                  - разрезать строку на две
  wr Del в конце строки     - склеить строку со следующей
  wr Backspace              - удалить символ слева от курсора
  wr ,,->,<-              - переместить курсор на 1 позицию
  wr Home                   - переместить курсор в начало текста
  wr End                    - переместить курсор в конец текста
  wr PgUp                   - переместить курсор на высоту окна вверх
  wr PgDn                   - переместить курсор на высоту окна вниз
  wr Ctrl Home              - переместить курсор в начало строки
  wr Ctrl End               - переместить курсор на ширину окна влево
  wr Ctrl PgUp              - переместить курсор в конец строки
  wr Ctrl PgDn              - переместить курсор на ширину окна вправо
  wr Ctrl ,               - передвинуть строку
  wr Ctrl D                 - удалить строку
  wr Ctrl C                 - скопировать строку
  wr Ctrl K                 - отрезать конец строки
}}
